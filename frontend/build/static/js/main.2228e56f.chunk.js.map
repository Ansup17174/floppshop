{"version":3,"sources":["reportWebVitals.js","context/UserContext.js","utils/api.js","components/Header.js","components/items/ItemList.js","components/items/FilterForm.js","components/NotFound.js","components/user/Register.js","components/user/Login.js","components/user/Logout.js","components/user/ConfirmEmail.js","components/user/UserProfile.js","components/user/ChangePassword.js","components/items/ItemDetails.js","components/order/OrderInfo.js","components/order/ActiveOrder.js","components/order/Checkout.js","components/order/OrderFinished.js","components/order/HistoryDetails.js","components/order/History.js","components/user/PasswordReset.js","components/user/PasswordResetConfirm.js","components/admin/AdminPanel.js","components/admin/AdminItemList.js","components/admin/AdminFilterForm.js","components/admin/AdminItemDetails.js","components/admin/ItemForm.js","components/admin/AdminEditItem.js","components/admin/AdminCreateItem.js","components/admin/AdminDeleteItem.js","components/admin/AdminEditImages.js","components/admin/ShippingMethodForm.js","components/admin/AdminCreateShipping.js","components/admin/AdminShippingList.js","components/admin/AdminEditShipping.js","components/admin/AdminNotifications.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","UserContext","createContext","userData","setUserData","data","instance","axios","create","baseURL","process","Header","useContext","reloadUserData","useState","navbarToggled","setNavbarToggled","history","useHistory","logout","a","apiInstance","post","withCredentials","response","push","className","to","onClick","is_staff","pk","ItemList","items","length","map","item","index","id","src","images","url","alt","name","quantity","is_discount","old_price","price","is_available","FilterForm","text","minPrice","maxPrice","orderBy","search","setSearch","page","setPage","maxPage","setMaxPage","setItems","filterToggled","setFilterToggled","changePage","number","Number","parseInt","getItems","params","min_price","max_price","order_by","get","results","Math","floor","count","handleSubmit","e","preventDefault","useEffect","onSubmit","htmlFor","type","maxLength","size","autoComplete","value","onChange","target","min","onFocus","select","onBlur","NotFound","Register","dateInputType","setDateInputType","email","firstName","lastName","phone","dateOfBirth","password1","password2","responseOk","responseLoading","formState","setFormState","errors","setErrors","first_name","last_name","date_of_birth","catch","error","placeholder","message","non_field_errors","Login","password","Logout","ConfirmEmail","isConfirmed","setIsConfirmed","key","useParams","console","log","UserProfile","formData","setFormData","setResponseOk","put","status","ChangePassword","oldPassword","setOldPassword","newPassword1","setNewPassword1","newPassword2","setNewPassword2","requestData","old_password","new_password1","new_password2","ItemDetails","description","setItem","selectedImage","setSelectedImage","setQuantity","setResponse","setError","image","detail","OrderInfo","order","total_price","ActiveOrder","carts","address","method","is_finished","is_paid","date_created","date_finished","date_paid","setOrder","changeQuantity","sort","cart1","cart2","cart","Checkout","street","state","post_code","city","methods","setMethods","payUUri","setPayUUri","setSelect","readOnly","setReadOnly","easyPack","init","dropdownWidget","address_details","building_number","province","easyPackDiv","document","getElementById","classList","remove","add","selected","disabled","redirectUri","href","rel","OrderFinished","selectOrder","HistoryDetails","History","selectedOrder","setSelectedOrder","orders","setOrders","PasswordReset","setEmail","PasswordResetConfirm","uid","token","AdminPanel","AdminFilterForm","AdminItemList","AdminItemDetails","ItemForm","step","checked","is_visible","AdminEditItem","AdminCreateItem","AdminDeleteItem","delete","AdminEditImages","setImages","imagesInput","useRef","getImages","is_main","imageId","current","files","multiple","ref","FormData","forEach","append","patch","headers","ShippingMethodForm","shipping","setShipping","AdminCreateShipping","AdminShippingList","shippings","setShippings","AdminNotifications","notifications","setNotifications","notification","content","App","Provider","path","component","exact","AdminEditShipping","ReactDOM","render","StrictMode"],"mappings":"iQAYeA,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,qDCACQ,EALKC,wBAAc,CAC9BC,SAAU,GACVC,YAAa,SAACC,O,QCGHC,E,OAJEC,EAAMC,OAAO,CAC1BC,QAASC,qC,QCsCEC,G,MAnCA,WAAO,IAAD,EAEkBC,qBAAWX,GAAvCE,EAFU,EAEVA,SAAUU,EAFA,EAEAA,eAFA,EAGyBC,oBAAS,GAHlC,mBAGVC,EAHU,KAGKC,EAHL,KAKXC,EAAUC,cAEVC,EAAM,uCAAG,sBAAAC,EAAA,4DACC,eADD,SAELC,EAAYC,KADN,eACgB,GAAI,CAACC,iBAAiB,IACjD5B,MAAK,SAAA6B,GACFX,IACAI,EAAQQ,KAAK,cALN,2CAAH,qDASZ,OACA,qBAAKC,UAAU,cAAf,SACI,sBAAKA,UAAU,SAAf,UACI,cAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,OAAOE,QAAS,kBAAMZ,GAAiB,IAA9D,SAAsE,8CACtE,qBAAIU,UAAS,mBAAcX,EAAgB,GAAK,kBAAhD,UACKZ,EAAS0B,UAAY,cAAC,IAAD,CAAMF,GAAG,eAAeD,UAAU,WAAWE,QAAS,kBAAMZ,GAAiB,IAA7E,SAAqF,+CAC1Gb,EAAS2B,IAAM,cAAC,IAAD,CAAMH,GAAG,iBAAiBD,UAAU,WAAWE,QAAS,kBAAMZ,GAAiB,IAA/E,SAAuF,2CACtGb,EAAS2B,IAAM,cAAC,IAAD,CAAMH,GAAG,SAASD,UAAU,WAAWE,QAAS,kBAAMZ,GAAiB,IAAvE,SAA+E,yCAC9Fb,EAAS2B,IAAM,cAAC,IAAD,CAAMH,GAAG,WAAWD,UAAU,WAAWE,QAAS,kBAAMZ,GAAiB,IAAzE,SAAiF,2CAChGb,EAAS2B,IAAM,cAAC,IAAD,CAAMH,GAAG,mBAAmBD,UAAU,WAAWE,QAAS,kBAAMZ,GAAiB,IAAjF,SAAyF,mDACzG,cAAC,IAAD,CAAMW,GAAG,YAAYD,UAAU,WAAWE,QAAS,kBAAMZ,GAAiB,IAA1E,SAAkF,4CAChFb,EAAS2B,GAA6G,qBAAKJ,UAAU,WAAWE,QAAST,EAAnC,oBAAxG,cAAC,IAAD,CAAMQ,GAAG,SAASD,UAAU,WAAWE,QAAS,kBAAMZ,GAAiB,IAAvE,SAA+E,6CAEnG,qBAAKU,UAAU,aAAaE,QAAS,kBAAMZ,GAAkBD,IAA7D,SAA8EA,EAAgB,cAAC,IAAD,IAAU,cAAC,IAAD,a,OCbrGgB,EArBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAEf,OACI,qBAAKN,UAAU,YAAf,SACKM,EAAMC,OAASD,EAAME,KAAI,SAACC,EAAMC,GAAP,OACtB,cAAC,IAAD,CAAMT,GAAE,wBAAmBQ,EAAKE,IAAhC,SAAsC,sBAAKX,UAAU,OAAf,UAClC,qBAAKY,IAAKH,EAAKI,OAAON,OAAS,EAAIE,EAAKI,OAAO,GAAGC,IAAM,sCAAuCC,IAAI,GAAGf,UAAU,eAChH,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,YAAf,SAA4BS,EAAKO,OACjC,sBAAKhB,UAAU,gBAAf,uBAA0CS,EAAKQ,YAC/C,sBAAKjB,UAAU,uBAAf,UACKS,EAAKS,aAAe,sBAAKlB,UAAU,iBAAf,UAAiCS,EAAKU,UAAtC,aACrB,sBAAKnB,UAAWS,EAAKS,YAAc,sBAAwB,aAA3D,UAA0ET,EAAKW,MAA/E,aACCX,EAAKY,cAAgBZ,EAAKQ,SAAW,EAAI,qBAAKjB,UAAU,oBAAf,uBAAqD,qBAAKA,UAAU,qBAAf,gCANvEU,KAF6BA,QAYhE,qBAAKV,UAAU,aAAf,+BC8FFsB,G,MA3GI,WAAO,IAAD,EAEOlC,mBAAS,CACjCmC,KAAM,GACNC,SAAU,EACVC,SAAU,EACVC,QAAS,KANQ,mBAEdC,EAFc,KAENC,EAFM,OASGxC,mBAAS,GATZ,mBASdyC,EATc,KASRC,EATQ,OAUS1C,mBAAS,GAVlB,mBAUd2C,EAVc,KAULC,EAVK,OAWK5C,mBAAS,IAXd,mBAWdkB,EAXc,KAWP2B,EAXO,OAYqB7C,oBAAS,GAZ9B,mBAYd8C,EAZc,KAYCC,EAZD,KA0BfC,EAAa,SAAAC,GAEXP,EADAO,EAAS,GAAKA,GAAUN,EAChBO,OAAOC,SAASF,GAEhB,IAIVG,EAAW,WACb,IAAM1B,EAAG,sCAA2C,IAARe,EAAK,IAC7CY,EAAS,CACTd,OAAQA,EAAOJ,KACfmB,UAAWf,EAAOH,SAClBmB,UAAWhB,EAAOF,SAClBmB,SAAUjB,EAAOD,SAErB/B,EAAYkD,IAAI/B,EAAK,CAAC2B,WACrBxE,MAAK,SAAA6B,GACFmC,EAASnC,EAASnB,KAAKmE,SACvBd,EAAWe,KAAKC,OAAOlD,EAASnB,KAAKsE,MAAQ,GAAK,IAAM,OAI1DC,EAAY,uCAAG,WAAMC,GAAN,SAAAzD,EAAA,sDACjByD,EAAEC,iBACFZ,IAFiB,2CAAH,sDASlB,OAJAa,qBAAU,WACNb,MACD,CAACX,IAGA,qCACA,qBAAK7B,UAAS,gBAAWkC,EAAgB,GAAK,kBAA9C,SACI,uBAAMlC,UAAU,cAAcsD,SAAUJ,EAAxC,UACI,gCACI,2CACA,gCACI,uBAAOK,QAAQ,aAAf,6BACA,uBAAO5C,GAAG,aAAaX,UAAU,oBAAoBwD,KAAK,OAAOC,UAAU,MAAMC,KAAK,KAAKC,aAAa,MAAMC,MAAOjC,EAAOJ,KAAMsC,SApDnI,SAAAV,GACfvB,EAAU,2BAAID,GAAL,IAAaJ,KAAM4B,EAAEW,OAAOF,eAqDzB,gCACI,uBAAOL,QAAQ,YAAf,oBACA,uBAAO5C,GAAG,YAAYX,UAAU,uCAAuCwD,KAAK,SAASE,KAAK,IAAIK,IAAI,IAAIH,MAAOjC,EAAOH,SAAUqC,SApD3H,SAAAV,GACnBvB,EAAU,2BAAID,GAAL,IAAaH,SAAU2B,EAAEW,OAAOF,YAiD7B,IAGI,uBAAOjD,GAAG,YAAYX,UAAU,uCAAuCwD,KAAK,SAASE,KAAK,IAAIK,IAAI,IAAIH,MAAOjC,EAAOF,SAAUoC,SAjD3H,SAAAV,GACnBvB,EAAU,2BAAID,GAAL,IAAaF,SAAU0B,EAAEW,OAAOF,kBAmDjC,uBAAO5D,UAAU,qBAAqBwD,KAAK,SAASI,MAAM,SAAS1D,QAAS,kBAAMiC,GAAiB,MACnG,gCACI,0CACA,2CACA,gCACI,uBAAOqB,KAAK,QAAQxD,UAAU,oBAAoBgB,KAAK,QAAQL,GAAG,SAASiD,MAAM,IAAIC,SAAU,SAAAV,GAAC,OAAIvB,EAAU,2BAAID,GAAL,IAAaD,QAASyB,EAAEW,OAAOF,YAC5I,uBAAOL,QAAQ,SAAf,uBACA,uBAAOC,KAAK,QAAQxD,UAAU,oBAAoBgB,KAAK,QAAQL,GAAG,SAASiD,MAAM,IAAIC,SAAU,SAAAV,GAAC,OAAIvB,EAAU,2BAAID,GAAL,IAAaD,QAASyB,EAAEW,OAAOF,YAC5I,uBAAOL,QAAQ,SAAf,8BAGR,sBAAKvD,UAAU,gBAAf,UACI,8BACA,wCAAU,uBAAOwD,KAAK,SAASxD,UAAU,uCAAuC4D,MAAO/B,EAAMmC,QAAS,SAAAb,GAAC,OAAIA,EAAEW,OAAOG,UAAUC,OAAQ,SAAAf,GAAC,OAAIf,EAAWe,EAAEW,OAAOF,UAA/J,OAA6K7B,OAE7K,gCACc,IAATF,GAAc,sBAAM7B,UAAU,cAAcE,QAAS,kBAAMkC,EAAWP,EAAK,IAA7D,eACdA,IAASE,GAAW,sBAAM/B,UAAU,cAAcE,QAAS,kBAAMkC,EAAWP,EAAK,IAA7D,0BAKrC,qBAAK7B,UAAU,eAAeE,QAAS,kBAAMiC,GAAkBD,IAA/D,SAAgFA,EAAgB,cAAC,IAAD,IAAoB,cAAC,IAAD,MACpH,sBAAKlC,UAAU,QAAf,UACQ,sBAAMA,UAAS,qBAAyB,IAAT6B,EAAa,GAAK,WAAa3B,QAAS,kBAAMkC,EAAWP,EAAK,IAA7F,eACA,+BAAI,uBAAO2B,KAAK,SAASxD,UAAU,+BAA+B4D,MAAO/B,EAAMmC,QAAS,SAAAb,GAAC,OAAIA,EAAEW,OAAOG,UAAUJ,SAAU,SAAAV,GAAC,OAAIf,EAAWe,EAAEW,OAAOF,UAAnJ,OAAiK7B,KACjK,sBAAM/B,UAAS,qBAAgB6B,IAASE,EAAU,GAAK,WAAa7B,QAAS,kBAAMkC,EAAWP,EAAK,IAAnG,kBAER,cAAC,EAAD,CAAUvB,MAAOA,SClGV6D,EAVE,WACb,OACI,qBAAKnE,UAAU,YAAf,SACI,8BACI,sDC0FDoE,EA3FE,WAAO,IAAD,EAEuBhF,mBAAS,QAFhC,mBAEZiF,EAFY,KAEGC,EAFH,OAGelF,mBAAS,CACvCmF,MAAO,GACPC,UAAW,GACXC,SAAU,GACVC,MAAO,GACPC,YAAa,GACbC,UAAW,GACXC,UAAW,GACXC,YAAY,EACZC,iBAAiB,IAZF,mBAGZC,EAHY,KAGDC,EAHC,OAeS7F,mBAAS,IAflB,mBAeZ8F,EAfY,KAeJC,EAfI,KA0CnB,OACA,qBAAKnF,UAAU,kBAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,uBAAMA,UAAU,OAAOsD,SA5BV,SAAAH,GACjBA,EAAEC,iBACF6B,EAAa,2BAAID,GAAL,IAAgBF,YAAY,EAAOC,iBAAiB,KAChEI,EAAU,IAEVxF,EAAYC,KADA,qBACU,CAClB2E,MAAOS,EAAUT,MACjBa,WAAYJ,EAAUR,UACtBa,UAAWL,EAAUP,SACrBC,MAAOM,EAAUN,MACjBY,cAAeN,EAAUL,YACzBC,UAAWI,EAAUJ,UACrBC,UAAWG,EAAUH,YAExB5G,MAAK,SAAA6B,GACFmF,EAAa,2BAAID,GAAL,IAAgBF,YAAY,EAAMC,iBAAiB,KAC/DI,EAAU,OAEbI,OAAM,SAAAC,GACHP,EAAa,2BAAID,GAAL,IAAgBF,YAAY,EAAOC,iBAAiB,KAChEI,EAAUK,EAAM1F,SAASnB,UAQzB,UACI,8CACCqG,EAAUF,WAAa,qBAAK9E,UAAU,eAAf,sCAA+D,KACtFgF,EAAUD,gBAAkB,qBAAK/E,UAAU,eAAf,wBAAiD,KAC9E,sBAAKA,UAAU,aAAf,UACI,uBAAOwD,KAAK,QAAQxD,UAAU,aAAaW,GAAG,QAAQiD,MAAOoB,EAAUT,MAAOkB,YAAY,SAAS5B,SAAU,SAAAV,GAAC,OAAI8B,EAAa,2BAAID,GAAL,IAAgBT,MAAOpB,EAAEW,OAAOF,YAC7JsB,EAAOX,MAAQW,EAAOX,MAAM/D,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,MAA0B,QAEpH,sBAAKV,UAAU,aAAf,UACI,uBAAOwD,KAAK,OAAOxD,UAAU,aAAa4D,MAAOoB,EAAUR,UAAWiB,YAAY,aAAa5B,SAAU,SAAAV,GAAC,OAAI8B,EAAa,2BAAID,GAAL,IAAgBR,UAAWrB,EAAEW,OAAOF,YAC7JsB,EAAOE,WAAaF,EAAOE,WAAW5E,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,MAA0B,QAE9H,sBAAKV,UAAU,aAAf,UACI,uBAAOwD,KAAK,OAAOxD,UAAU,aAAa4D,MAAOoB,EAAUP,SAAUgB,YAAY,YAAY5B,SAAU,SAAAV,GAAC,OAAI8B,EAAa,2BAAID,GAAL,IAAgBP,SAAUtB,EAAEW,OAAOF,YAC1JsB,EAAOG,UAAYH,EAAOG,UAAU7E,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,MAA0B,QAE5H,sBAAKV,UAAU,aAAf,UACI,uBAAOwD,KAAK,OAAOxD,UAAU,aAAa4D,MAAOoB,EAAUN,MAAOe,YAAY,eAAe5B,SAAU,SAAAV,GAAC,OAAI8B,EAAa,2BAAID,GAAL,IAAgBN,MAAOvB,EAAEW,OAAOF,YACvJsB,EAAOR,MAAQQ,EAAOR,MAAMlE,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,MAA0B,QAEpH,sBAAKV,UAAU,aAAf,UACI,uBAAOwD,KAAMa,EACbrE,UAAU,aACV4D,MAAOoB,EAAUL,YACjBc,YAAY,gBACZzB,QAAS,kBAAMM,EAAiB,SAC5BJ,OAAQ,kBAAMI,EAAiB,SAC/BT,SAAU,SAAAV,GAAC,OAAI8B,EAAa,2BAAID,GAAL,IAAgBL,YAAaxB,EAAEW,OAAOF,YACpEsB,EAAOI,cAAgBJ,EAAOI,cAAc9E,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,MAA0B,QAEpI,sBAAKV,UAAU,aAAf,UACI,uBAAOwD,KAAK,WAAWxD,UAAU,aAAa4D,MAAOoB,EAAUJ,UAAWa,YAAY,WAAW5B,SAAU,SAAAV,GAAC,OAAI8B,EAAa,2BAAID,GAAL,IAAgBJ,UAAWzB,EAAEW,OAAOF,YAC/JsB,EAAON,UAAYM,EAAON,UAAUpE,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,MAA0B,QAE5H,sBAAKV,UAAU,aAAf,UACI,uBAAOwD,KAAK,WAAWxD,UAAU,aAAa4D,MAAOoB,EAAUH,UAAWY,YAAY,iBAAiB5B,SAAU,SAAAV,GAAC,OAAI8B,EAAa,2BAAID,GAAL,IAAgBH,UAAW1B,EAAEW,OAAOF,YACrKsB,EAAOL,UAAYK,EAAOL,UAAUrE,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,MAA0B,KACvHwE,EAAOS,iBAAmBT,EAAOS,iBAAiBnF,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,MAA0B,QAE1I,uBAAOV,UAAU,yBAAyBwD,KAAK,SAASI,MAAM,qBCpC/DgC,EA7CD,WAAO,IAAD,EAEkBxG,mBAAS,CACvCmF,MAAO,GACPsB,SAAU,KAJE,mBAETb,EAFS,KAEEC,EAFF,OAOY7F,mBAAS,IAPrB,mBAOT8F,EAPS,KAODC,EAPC,KAQV5F,EAAUC,cACTL,EAAkBD,qBAAWX,GAA7BY,eAED+D,EAAY,uCAAG,WAAMC,GAAN,SAAAzD,EAAA,6DACjByD,EAAEC,iBACU,cAFK,SAGXzD,EAAYC,KADN,cACgB,CAAC2E,MAAOS,EAAUT,MAAOsB,SAAUb,EAAUa,UAAW,CAAChG,iBAAiB,IACrG5B,MAAK,SAAA6B,GACFqF,EAAU,IACVhG,IACAI,EAAQQ,KAAK,QAEhBwF,OAAM,SAAAC,GACHL,EAAUK,EAAM1F,SAASnB,SAVZ,2CAAH,sDAclB,OACI,qBAAKqB,UAAU,iBAAf,SACI,uBAAMA,UAAU,aAAasD,SAAUJ,EAAvC,UACI,uCACA,sBAAKlD,UAAU,aAAf,UACI,uBAAOwD,KAAK,QAAQxD,UAAU,aAAayF,YAAY,SAAS7B,MAAOoB,EAAUT,MAAOV,SAAU,SAAAV,GAAC,OAAI8B,EAAa,2BAAID,GAAL,IAAgBT,MAAOpB,EAAEW,OAAOF,YAClJsB,EAAOX,OAASW,EAAOX,MAAM/D,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAE3F,sBAAKV,UAAU,aAAf,UACI,uBAAOwD,KAAK,WAAWxD,UAAU,aAAayF,YAAY,WAAW7B,MAAOoB,EAAUa,SAAUhC,SAAU,SAAAV,GAAC,OAAI8B,EAAa,2BAAID,GAAL,IAAgBa,SAAU1C,EAAEW,OAAOF,YAC7JsB,EAAOW,UAAYX,EAAOW,SAASrF,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,MAC5FwE,EAAOS,kBAAoBT,EAAOS,iBAAiBnF,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAEjH,cAAC,IAAD,CAAMT,GAAG,iBAAT,SAA0B,qBAAKD,UAAU,YAAf,gCAC1B,uBAAOwD,KAAK,SAASxD,UAAU,yBAAyB4D,MAAM,iBCnC/DkC,EAVA,WACX,OACI,qBAAK9F,UAAU,YAAf,SACI,8BACI,6DCuBD+F,EAvBM,WAAO,IAAD,EAEe3G,oBAAS,GAFxB,mBAEhB4G,EAFgB,KAEHC,EAFG,KAGfC,EAAQC,cAARD,IAeR,OAbA7C,qBAAU,WAEN1D,EAAYC,KADA,kCACU,CAACsG,IAAKA,IAC3BjI,MAAK,SAAA6B,GACFsG,QAAQC,IAAIvG,EAASnB,MACrBsH,GAAe,MAElBV,OAAM,SAAAC,GACHY,QAAQC,IAAIb,EAAM1F,SAASnB,MAC3BsH,GAAe,QAEpB,IAGC,oBAAIjG,UAAU,YAAd,SAA2BgG,EAAc,+BAAiC,6BCoEnEM,EAtFK,WAAO,IAAD,EAEUlH,mBAAS,IAFnB,mBAEfmH,EAFe,KAELC,EAFK,OAGMpH,mBAAS,IAHf,mBAGf8F,EAHe,KAGPC,EAHO,OAIc/F,oBAAS,GAJvB,mBAIf0F,EAJe,KAIH2B,EAJG,OAKoBrH,mBAAS,QAL7B,mBAKfiF,EALe,KAKAC,EALA,OAMapF,qBAAWX,GAAvCE,EANe,EAMfA,SAAUU,EANK,EAMLA,eACXI,EAAUC,cAEhB6D,qBAAU,WACN1D,EAAYkD,IAAI,aAAc,CAAChD,iBAAiB,IAC/C5B,MAAK,SAAA6B,GACF0G,EAAY1G,EAASnB,SAExB4G,OAAM,SAAAC,GACHrG,IACAI,EAAQQ,KAAK,eAElB,IAqBH,OACI,qBAAKC,UAAU,kBAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,uBAAMA,UAAU,OAAOsD,SAtBd,SAAAH,GACjBA,EAAEC,iBACFjE,IAEAQ,EAAY+G,IADA,aACSH,EAAU,CAAC1G,iBAAiB,IAChD5B,MAAK,SAAA6B,GACF2G,GAAc,GACdtB,EAAU,OAEbI,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,SACfxH,IACAI,EAAQQ,KAAK,WAEjB0G,GAAc,GACdtB,EAAUK,EAAM1F,SAASnB,UAOrB,UACI,8CACCmG,GAAc,qBAAK9E,UAAU,eAAf,2BACf,qBAAKA,UAAU,aAAf,SACI,sBAAKA,UAAU,aAAf,iBAAiCuG,EAASnG,QAE9C,qBAAKJ,UAAU,aAAf,SACI,sBAAKA,UAAU,aAAf,qBAAqCuG,EAAShC,WAEjD9F,EAAS0B,UAAY,qBAAKH,UAAU,aAAf,SAClB,qBAAKA,UAAU,aAAf,8BAEJ,sBAAKA,UAAU,aAAf,yBACgB,uBAAOwD,KAAK,OAAOxD,UAAU,aAAa4D,MAAO2C,EAASnB,WAAYK,YAAY,aAAa5B,SAAU,SAAAV,GAAC,OAAIqD,EAAY,2BAAID,GAAL,IAAenB,WAAYjC,EAAEW,OAAOF,YACxKsB,EAAOE,YAAcF,EAAOE,WAAW5E,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAErG,sBAAKV,UAAU,aAAf,wBACe,uBAAOwD,KAAK,OAAOxD,UAAU,aAAa4D,MAAO2C,EAASlB,UAAWI,YAAY,YAAY5B,SAAU,SAAAV,GAAC,OAAIqD,EAAY,2BAAID,GAAL,IAAelB,UAAWlC,EAAEW,OAAOF,YACpKsB,EAAOG,WAAaH,EAAOG,UAAU7E,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAEnG,sBAAKV,UAAU,aAAf,oBACW,uBAAOwD,KAAK,OAAOxD,UAAU,aAAa4D,MAAO2C,EAAS7B,MAAOe,YAAY,eAAe5B,SAAU,SAAAV,GAAC,OAAIqD,EAAY,2BAAID,GAAL,IAAe7B,MAAOvB,EAAEW,OAAOF,YAC3JsB,EAAOR,OAASQ,EAAOR,MAAMlE,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAE3F,sBAAKV,UAAU,aAAf,4BACmB,uBAAOwD,KAAMa,EAC5BrE,UAAU,aACV4D,MAAO2C,EAASjB,cAChBG,YAAY,gBACZzB,QAAS,kBAAMM,EAAiB,SAC5BJ,OAAQ,kBAAMI,EAAiB,SAC/BT,SAAU,SAAAV,GAAC,OAAIqD,EAAY,2BAAID,GAAL,IAAejB,cAAenC,EAAEW,OAAOF,YACpEsB,EAAOI,eAAiBJ,EAAOI,cAAc9E,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAE3G,qBAAKV,UAAU,aAAf,SACKkF,EAAOS,kBAAoBT,EAAOS,iBAAiBnF,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,QAEjH,uBAAOV,UAAU,yBAAyBwD,KAAK,SAASI,MAAM,yBCtBnEgD,EAzDQ,WAAO,IAAD,EAEaxH,mBAAS,IAFtB,mBAElByH,EAFkB,KAELC,EAFK,OAGe1H,mBAAS,IAHxB,mBAGlB2H,EAHkB,KAGJC,EAHI,OAIe5H,mBAAS,IAJxB,mBAIlB6H,EAJkB,KAIJC,EAJI,OAKW9H,oBAAS,GALpB,mBAKlB0F,EALkB,KAKN2B,EALM,OAMGrH,mBAAS,IANZ,mBAMlB8F,EANkB,KAMVC,EANU,KAQlBhG,EAAkBD,qBAAWX,GAA7BY,eACDI,EAAUC,cAwBhB,OACI,qBAAKQ,UAAU,iBAAf,SACI,uBAAMA,UAAU,aAAasD,SAxBhB,SAAAH,GACjBA,EAAEC,iBACF,IAAM+D,EAAc,CAChBC,aAAcP,EACdQ,cAAeN,EACfO,cAAeL,GAEnBtH,EAAYC,KAAK,wBAAyBuH,EAAa,CAACtH,iBAAiB,IACxE5B,MAAK,SAAA6B,GACF2G,GAAc,GACdtB,EAAU,OAEbI,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,SACfxH,IACAI,EAAQQ,KAAK,WAEjBoF,EAAUK,EAAM1F,SAASnB,MACzB8H,GAAc,OAMd,UACI,iDACC3B,GAAc,qBAAK9E,UAAU,eAAf,8BACf,sBAAKA,UAAU,aAAf,UACI,uBAAOwD,KAAK,WAAWxD,UAAU,aAAayF,YAAY,eAAe7B,MAAOiD,EAAahD,SAAU,SAAAV,GAAC,OAAI2D,EAAe3D,EAAEW,OAAOF,UACnIsB,EAAOkC,cAAgBlC,EAAOkC,aAAa5G,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAEzG,sBAAKV,UAAU,aAAf,UACI,uBAAOwD,KAAK,WAAWxD,UAAU,aAAayF,YAAY,eAAe7B,MAAOmD,EAAclD,SAAU,SAAAV,GAAC,OAAI6D,EAAgB7D,EAAEW,OAAOF,UACrIsB,EAAOmC,eAAiBnC,EAAOmC,cAAc7G,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAE3G,sBAAKV,UAAU,aAAf,UACI,uBAAOwD,KAAK,WAAWxD,UAAU,aAAayF,YAAY,qBAAqB7B,MAAOqD,EAAcpD,SAAU,SAAAV,GAAC,OAAI+D,EAAgB/D,EAAEW,OAAOF,UAC3IsB,EAAOoC,eAAiBpC,EAAOoC,cAAc9G,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,MACtGwE,EAAOS,kBAAoBT,EAAOS,iBAAiBnF,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAEjH,uBAAO8C,KAAK,SAASxD,UAAU,yBAAyB4D,MAAM,0BC8D/D2D,EAhHK,WAAO,IAAD,EAEEnI,mBAAS,CAC7B4B,KAAM,GACNwG,YAAa,GACbvG,SAAU,GACVG,MAAO,EACPP,OAAQ,KAPU,mBAEfJ,EAFe,KAETgH,EAFS,OASoBrI,mBAAS,uCAT7B,mBASfsI,EATe,KASAC,EATA,KAUfxI,EAAkBD,qBAAWX,GAA7BY,eAVe,EAWUC,mBAAS,GAXnB,mBAWf6B,EAXe,KAWL2G,EAXK,OAYUxI,oBAAS,GAZnB,mBAYfU,EAZe,KAYL+H,EAZK,OAaIzI,mBAAS,IAbb,mBAafoG,EAbe,KAaRsC,EAbQ,KAcdnH,EAAOwF,cAAPxF,GACFpB,EAAUC,cAEhB6D,qBAAU,WACN,IAAMvC,EAAG,qBAAiBH,EAAjB,KACThB,EAAYkD,IAAI/B,GACf7C,MAAK,SAAA6B,GACF2H,EAAQ3H,EAASnB,MACbmB,EAASnB,KAAKkC,OAAON,OAAS,GAC9BoH,EAAiB7H,EAASnB,KAAKkC,OAAO,GAAGC,QAGhDyE,OAAM,SAAAC,GACHjG,EAAQQ,KAAK,mBAElB,IA0CH,OACI,qBAAKC,UAAU,kBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKY,IAAK8G,EAAe3G,IAAI,OAAOf,UAAU,uBAC9C,qBAAKA,UAAU,4BAAf,SACKS,EAAKI,OAAON,OAAS,GAAKE,EAAKI,OAAOL,KAAI,SAACuH,EAAOrH,GAAR,OACvC,qBAAKE,IAAKmH,EAAMjH,IAAKC,IAAI,aAAyBf,UAAU,2BAC5DE,QAAS,SAAAiD,GAAC,OAAIwE,EAAiBxE,EAAEW,OAAOlD,OADGF,WAKvD,qBAAKV,UAAU,oCACf,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,oBAAf,SAAoCS,EAAKO,OACzC,qBAAKhB,UAAU,2BAAf,SAA2CS,EAAK+G,cAChD,sBAAKxH,UAAU,sBAAf,UACI,sBAAKA,UAAU,gBAAf,uBAA0CS,EAAKQ,YAC9CR,EAAKS,aAAe,uBAAMlB,UAAU,iBAAhB,UAAkCS,EAAKU,UAAvC,QACrB,uBAAMnB,UAAWS,EAAKS,YAAc,sBAAwB,aAA5D,UAA2ET,EAAKW,MAAhF,QACCX,EAAKS,aAAe,oBAAIlB,UAAU,cAAd,6BAExBS,EAAKY,cAAgBZ,EAAKQ,SAAW,EAAI,uBAAMjB,UAAU,gBAAgBsD,SAxCrE,SAAAH,GACjBA,EAAEC,iBACFjE,IACA,IAAM2B,EAAG,qBAAiBH,EAAjB,KACThB,EAAYC,KAAKkB,EAAK,GAAI,CAACjB,iBAAiB,EAAM4C,OAAQ,CAACxB,cAC1DhD,MAAK,SAAA6B,GACF+H,EAAY/H,EAASnB,MACrBmJ,EAAS,OAEZvC,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfpH,EAAQQ,KAAK,UAEjB8H,EAAY,IACZC,EAAStC,EAAM1F,SAASnB,UA0B0B,UACtC,sBAAKqB,UAAU,gBAAf,UACI,qBAAKA,UAAU,gBAAf,wBACA,sBAAKA,UAAU,mBAAf,UACI,qBAAKE,QAlDR,WACjBe,EAAW,GACX2G,EAAY3G,EAAS,IAgD+BjB,UAAU,WAA1C,eACA,uBAAOwD,KAAK,SAASxD,UAAU,iBAAiB4D,MAAO3C,EAAU4C,SAnEtE,SAAAV,GACfA,EAAEW,OAAOF,MAAQ,GAAKT,EAAEW,OAAOF,OAASnD,EAAKQ,SAC7C2G,EAAYtF,OAAOC,SAASY,EAAEW,OAAOF,QAC9BT,EAAEW,OAAOF,MAAQnD,EAAKQ,SAC7B2G,EAAYnH,EAAKQ,UAEjB2G,EAAY,MA8DQ,qBAAK1H,QA1DR,WACjBe,EAAWR,EAAKQ,UAChB2G,EAAY3G,EAAS,IAwD+BjB,UAAU,WAA1C,qBAGR,uBAAOwD,KAAK,SAASI,MAAM,cAAc5D,UAAU,gBAClDF,EAASkI,QAAU,qBAAKhI,UAAU,mBAAf,SAAmCF,EAASkI,SAC/DxC,EAAMwC,QAAU,qBAAKhI,UAAU,gBAAf,SAAgCwF,EAAMwC,YACjD,qBAAKhI,UAAU,0BAAf,uCChGfiI,EAfG,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAChB,OACI,mCACCA,EAAMvH,GAAK,sBAAKX,UAAU,iBAAf,UACJ,8CACA,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UAA0B,8CAAuB,+BAAOkI,EAAMvH,QAC9D,sBAAKX,UAAU,WAAf,UAA0B,8CAAuB,+BAAOkI,EAAMjH,cAC9D,sBAAKjB,UAAU,WAAf,UAA0B,iDAA0B,iCAAOkI,EAAMC,YAAb,sBAEnD,qBAAKnI,UAAU,iBAAf,SAAgC,sDCmGtCoI,G,MAtGK,WAAO,IAAD,EAEIhJ,mBAAS,CAC/BuB,GAAI,GACJ0H,MAAO,GACPC,QAAS,GACTC,OAAQ,GACRJ,YAAa,GACbK,aAAa,EACbC,SAAS,EACTC,aAAc,GACdC,cAAe,GACfC,UAAW,GACX3H,SAAU,IAbQ,mBAEfiH,EAFe,KAERW,EAFQ,OAeIzJ,mBAAS,IAfb,mBAefoG,EAfe,KAeRsC,EAfQ,KAgBhBvI,EAAUC,cACTL,EAAkBD,qBAAWX,GAA7BY,eAEPkE,qBAAU,WACN1D,EAAYkD,IAAI,cAAe,CAAChD,iBAAiB,IAChD5B,MAAK,SAAA6B,GACF+I,EAAS/I,EAASnB,SAErB4G,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,SACfxH,IACAI,EAAQQ,KAAK,WAEjB8I,EAASrD,EAAM1F,SAASnB,WAE7B,IAEH,IAAMmK,EAAiB,SAACnI,EAAIM,GACxB,IAAMH,EAAG,qBAAiBH,EAAjB,KACThB,EAAYC,KAAKkB,EAAK,GAAI,CAACjB,iBAAiB,EAAM4C,OAAQ,CAACxB,cAC1DhD,MAAK,SAAA6B,GACsB,MAApBA,EAAS6G,OACTkC,EAAS,IAETlJ,EAAYkD,IAAI,cAAe,CAAChD,iBAAiB,IACpD5B,MAAK,SAAA6B,GACFgI,EAAS,IACTe,EAAS/I,EAASnB,YAIzB4G,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,SACfxH,IACAI,EAAQQ,KAAK,WAEjB+H,EAAStC,EAAM1F,SAASnB,UAchC,OACI,sBAAKqB,UAAU,kBAAf,UACI,cAAC,EAAD,CAAWkI,MAAOA,IACjBA,EAAMvH,GAAK,sBAAKX,UAAU,iBAAf,UACR,uCACCkI,EAAMG,MAAMU,MAfJ,SAACC,EAAOC,GACzB,OAAID,EAAMvI,KAAKO,KAAOiI,EAAMxI,KAAKO,MACrB,EACDgI,EAAMvI,KAAKO,KAAOiI,EAAMxI,KAAKO,KAC7B,EAEA,KAS6BR,KAAI,SAAC0I,EAAMxI,GAAP,OAChC,sBAAKV,UAAU,aAAf,UACI,qBAAKY,IAAKsI,EAAKzI,KAAKI,OAAON,OAAS2I,EAAKzI,KAAKI,OAAO,GAAGC,IAAM,sCAAuCC,IAAI,GAAGf,UAAU,eACtH,oBAAIA,UAAU,cAAd,SAA6BkJ,EAAKzI,KAAKO,OACvC,qBAAKhB,UAAU,mBAAf,SAAmCkJ,EAAKzI,KAAK+G,cAC7C,gCACK0B,EAAKzI,KAAKS,aAAe,sBAAKlB,UAAU,iBAAf,UAAiCkJ,EAAKzI,KAAKU,UAA3C,aAC1B,sBAAKnB,UAAWkJ,EAAKzI,KAAKS,YAAc,sBAAwB,aAAhE,UAA+EgI,EAAKzI,KAAKW,MAAzF,gBAEJ,+CAAkB8H,EAAKf,YAAvB,aACA,sBAAMnI,UAAU,gBAAhB,SACI,8BACI,sBAAKA,UAAU,gBAAf,UACI,qBAAKA,UAAU,gBAAf,wBACA,sBAAKA,UAAU,mBAAf,UACI,qBAAKA,UAAU,WAAWE,QAAS,kBAAM4I,EAAeI,EAAKzI,KAAKE,IAAK,IAAvE,eACA,sBAAMX,UAAU,gBAAhB,SAAiCkJ,EAAKjI,WACtC,qBAAKjB,UAAU,WAAWE,QAAS,kBAAM4I,EAAeI,EAAKzI,KAAKE,GAAI,IAAtE,2BAhBaD,MAuBpC8E,EAAMwC,QAAU,qBAAKhI,UAAU,aAAf,SAA6BwF,EAAMwC,SACpD,qBAAKhI,UAAU,WAAf,SAA0B,cAAC,IAAD,CAAMC,GAAG,YAAT,SAAqB,qBAAKD,UAAU,kBAAf,qCAC1C,UCsDNmJ,EAvJE,WAAO,IAAD,EACa/J,mBAAS,CACrCgK,OAAQ,GACR/G,OAAQ,GACRgH,MAAO,GACPC,UAAW,GACXC,KAAM,GACNhB,OAAQ,KAPO,mBACZhC,EADY,KACFC,EADE,OASOpH,mBAAS,CAC/BuB,GAAI,GACJ0H,MAAO,GACPC,QAAS,GACTC,OAAQ,GACRJ,YAAa,GACbK,aAAa,EACbC,SAAS,EACTC,aAAc,GACdC,cAAe,GACfC,UAAW,GACX3H,SAAU,IApBK,mBASZiH,EATY,KASLW,EATK,OAsBWzJ,mBAAS,IAtBpB,mBAsBZoK,EAtBY,KAsBHC,EAtBG,OAuBWrK,mBAAS,IAvBpB,mBAuBZsK,EAvBY,KAuBHC,EAvBG,OAwBSvK,mBAAS,IAxBlB,mBAwBZ8F,EAxBY,KAwBJC,EAxBI,OAyBS/F,qBAzBT,mBAyBZ6E,EAzBY,KAyBJ2F,EAzBI,OA0BaxK,oBAAS,GA1BtB,mBA0BZyK,EA1BY,KA0BFC,EA1BE,OA2BgB5K,qBAAWX,GAA7BY,GA3BE,EA2BZV,SA3BY,EA2BFU,gBACXI,EAAUC,cAiBhB6D,qBAAU,WACN1D,EAAYkD,IAAI,cAAe,CAAChD,iBAAiB,IAChD5B,MAAK,SAAA6B,GACF+I,EAAS/I,EAASnB,SAErB4G,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,SACfxH,IACAI,EAAQQ,KAAK,WAEjBR,EAAQQ,KAAK,mBAElB,IAEHsD,qBAAU,WACN1D,EAAYkD,IAAI,iBACf5E,MAAK,SAAA6B,GACF2J,EAAW3J,EAASnB,WAEzB,IAEH0E,qBAAU,WAlCN0G,SAASC,KAAK,IAEdD,SAASE,eAAe,gBAAgB,YAAwB,IAAtBC,EAAqB,EAArBA,gBACtC1D,EAAY,CACR4C,OAAQc,EAAgBd,OACxB/G,OAAQ6H,EAAgBC,gBACxBd,MAAOa,EAAgBE,SACvBd,UAAWY,EAAgBZ,UAC3BC,KAAMW,EAAgBX,YA4B/B,IAEHlG,qBAAU,WACN,IAAMgH,EAAcC,SAASC,eAAe,gBAC7B,WAAXtG,GACAoG,EAAYG,UAAUC,OAAO,UAC7BX,GAAY,GACZtD,EAAY,CACR4C,OAAQ,GACR/G,OAAQ,GACRgH,MAAO,GACPC,UAAW,GACXC,KAAM,GACNhB,OAAQ,OAGZ8B,EAAYG,UAAUE,IAAI,UAC1BZ,GAAY,MAEjB,CAAC7F,IAyBJ,OACI,sBAAKjE,UAAU,kBAAf,UACA,cAAC,EAAD,CAAWkI,MAAOA,IAClB,8BACI,sBAAKlI,UAAU,WAAf,UACQ,uBAAMA,UAAU,gBAAhB,UACI,0CACA,uBAAOwD,KAAK,OAAOiC,YAAY,SAASzF,UAAU,aAAa6J,SAAUA,EAAUjG,MAAO2C,EAAS6C,OAAQvF,SAAU,SAAAV,GAAC,OAAIqD,EAAY,2BAAID,GAAL,IAAe6C,OAAQjG,EAAEW,OAAOF,YACpKsB,EAAOkE,QAAU,qBAAKpJ,UAAU,aAAf,SAA6BkF,EAAOkE,OAAO,KAC7D,uBAAO5F,KAAK,OAAOiC,YAAY,SAASzF,UAAU,aAAa6J,SAAUA,EAAUjG,MAAO2C,EAASlE,OAAQwB,SAAU,SAAAV,GAAC,OAAIqD,EAAY,2BAAID,GAAL,IAAelE,OAAQc,EAAEW,OAAOF,YACpKsB,EAAO7C,QAAU,qBAAKrC,UAAU,aAAf,SAA6BkF,EAAO7C,OAAO,KAC7D,uBAAOmB,KAAK,OAAOiC,YAAY,YAAYzF,UAAU,aAAa6J,SAAUA,EAAUjG,MAAO2C,EAAS+C,UAAWzF,SAAU,SAAAV,GAAC,OAAIqD,EAAY,2BAAID,GAAL,IAAe+C,UAAWnG,EAAEW,OAAOF,YAC7KsB,EAAOoE,WAAa,qBAAKtJ,UAAU,aAAf,SAA6BkF,EAAOoE,UAAU,KACnE,uBAAO9F,KAAK,OAAOiC,YAAY,QAAQzF,UAAU,aAAa6J,SAAUA,EAAUjG,MAAO2C,EAAS8C,MAAOxF,SAAU,SAAAV,GAAC,OAAIqD,EAAY,2BAAID,GAAL,IAAe8C,MAAOlG,EAAEW,OAAOF,YACjKsB,EAAOmE,OAAS,qBAAKrJ,UAAU,aAAf,SAA6BkF,EAAOmE,MAAM,KAC3D,uBAAO7F,KAAK,OAAOiC,YAAY,OAAOzF,UAAU,aAAa6J,SAAUA,EAAUjG,MAAO2C,EAASgD,KAAM1F,SAAU,SAAAV,GAAC,OAAIqD,EAAY,2BAAID,GAAL,IAAegD,KAAMpG,EAAEW,OAAOF,YAC9JsB,EAAOqE,MAAQ,qBAAKvJ,UAAU,aAAf,SAA6BkF,EAAOqE,KAAK,QAEjE,sBAAKvJ,UAAU,kBAAf,UACI,mDACA,qBAAKA,UAAU,kBAAf,SACI,qBAAKW,GAAG,mBAEZ,yBAAQK,KAAK,SAASL,GAAG,SAASX,UAAU,yBAAyB4D,MAAOK,EAAQJ,SAAU,SAAAV,GAAC,OAAIyG,EAAUzG,EAAEW,OAAOF,QAAtH,UACI,wBAAQA,MAAO,KAAM+G,SAAS,OAAOC,UAAQ,EAA7C,eACCpB,EAAQjJ,QAAUiJ,EAAQhJ,KAAI,SAAC+H,EAAQ7H,GAAT,OAC/B,yBAAQkD,MAAO2E,EAAOvH,KAAtB,UAAyCuH,EAAOvH,KAAhD,MAAyDuH,EAAOnH,MAAhE,YAAiCV,UAGnCgJ,GAAW,qBAAK1J,UAAU,kBAAkBE,QApD1C,WAChBP,EAAYC,KAAK,cAAjB,2BAAoC2G,GAApC,IAA8CgC,OAAQtE,IAAS,CAACpE,iBAAiB,IAChF5B,MAAK,SAAA6B,GACFH,EAAYC,KAAZ,uBAAiCsI,EAAMvH,GAAvC,KAA8C,GAAI,CAACd,iBAAiB,IACnE5B,MAAK,SAAA6B,GACFsG,QAAQC,IAAIvG,EAASnB,MACrBgL,EAAW7J,EAASnB,KAAKkM,gBAE5BtF,OAAM,SAAAC,GACHY,QAAQC,IAAIb,EAAM1F,SAASnB,YAGlC4G,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IACAI,EAAQQ,KAAK,WACoB,MAA1ByF,EAAM1F,SAAS6G,QACtBpH,EAAQQ,KAAK,UAEjBoF,EAAUK,EAAM1F,SAASnB,UAiCJ,0BACZ+K,GAAW,mBAAGoB,KAAMpB,EAAS5F,OAAO,SAASiH,IAAI,aAAtC,SAAmD,qBAAK/K,UAAU,4BAAf,mCAC9DkF,EAAO8C,QAAU,qBAAKhI,UAAU,aAAf,gDClIvBgL,EAnBO,SAAC,GAA0B,IAAzB9C,EAAwB,EAAxBA,MAAO+C,EAAiB,EAAjBA,YAC3B,OACI,mCACA,qBAAKjL,UAAU,2BAA2BE,QAAS,kBAAM+K,EAAY/C,IAArE,SACI,sBAAKlI,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UAA0B,8CAAuB,+BAAOkI,EAAMvH,QAC9D,sBAAKX,UAAU,WAAf,UAA0B,iDAA0B,iCAAOkI,EAAMC,YAAb,gBACpD,sBAAKnI,UAAU,WAAf,UAA0B,8CAAuB,+BAAOkI,EAAMjH,cAC9D,sBAAKjB,UAAU,WAAf,UAA0B,mDAA4B,+BAAOkI,EAAMS,mBACnE,sBAAK3I,UAAU,WAAf,UAA0B,qDAA8B,+BAAOkI,EAAMK,OAAOvH,UAC5E,sBAAKhB,UAAU,WAAf,UAA0B,oDAA6B,iCAAOkI,EAAMK,OAAOnH,MAApB,gBACvD,sBAAKpB,UAAU,WAAf,UAA0B,4CAAqB,+BAAOkI,EAAMO,QAAU,OAAS,cAC9EP,EAAMO,SAAW,sBAAKzI,UAAU,WAAf,UAA0B,+CAAwB,+BAAOkI,EAAMU,uBC6BlFsC,EAzCQ,SAAC,GAA0B,IAAzBhD,EAAwB,EAAxBA,MAAO+C,EAAiB,EAAjBA,YAE5B,OACI,qCACA,qBAAKjL,UAAU,iBAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,YAAf,SACI,qBAAKA,UAAU,sBAAsBE,QAAS,kBAAM+K,EAAY,KAAhE,uBAEJ,sBAAKjL,UAAU,WAAf,UAA0B,8CAAuB,+BAAOkI,EAAMvH,QAC9D,sBAAKX,UAAU,WAAf,UAA0B,iDAA0B,iCAAOkI,EAAMC,YAAb,gBACpD,sBAAKnI,UAAU,WAAf,UAA0B,8CAAuB,+BAAOkI,EAAMjH,cAC9D,sBAAKjB,UAAU,WAAf,UAA0B,mDAA4B,+BAAOkI,EAAMS,mBACnE,sBAAK3I,UAAU,WAAf,UAA0B,qDAA8B,+BAAOkI,EAAMK,OAAOvH,UAC5E,sBAAKhB,UAAU,WAAf,UAA0B,oDAA6B,+BAAOkI,EAAMK,OAAOnH,WAC3E,sBAAKpB,UAAU,WAAf,UAA0B,4CAAqB,+BAAOkI,EAAMO,QAAU,OAAS,cAC9EP,EAAMO,SAAW,sBAAKzI,UAAU,WAAf,UAA0B,+CAAwB,+BAAOkI,EAAMU,oBAGzF,qBAAK5I,UAAU,iBAAf,SACCkI,EAAMG,MAAM7H,KAAI,SAAC0I,EAAMxI,GAAP,OACL,sBAAKV,UAAU,aAAf,UACI,qBAAKY,IAAKsI,EAAKzI,KAAKI,OAAON,OAAS2I,EAAKzI,KAAKI,OAAO,GAAGC,IAAM,sCAAuCC,IAAI,GAAGf,UAAU,eACtH,oBAAIA,UAAU,cAAd,SAA6BkJ,EAAKzI,KAAKO,OACvC,qBAAKhB,UAAU,mBAAf,SAAmCkJ,EAAKzI,KAAK+G,cAC7C,sBAAKxH,UAAU,aAAf,UAA6BkJ,EAAKzI,KAAKW,MAAvC,aACA,+CAAkB8H,EAAKf,YAAvB,aACA,sBAAMnI,UAAU,gBAAhB,SACI,8BACI,qBAAKA,UAAU,gBAAf,SACI,sBAAKA,UAAU,gBAAf,uBAA0CkJ,EAAKjI,oBAT9BP,YCsCtCyK,EApDC,WAAO,IAAD,EACwB/L,mBAAS,IADjC,mBACXgM,EADW,KACIC,EADJ,OAEUjM,mBAAS,IAFnB,mBAEXkM,EAFW,KAEHC,EAFG,KAGXpM,EAAkBD,qBAAWX,GAA7BY,eAHW,EAIMC,mBAAS,GAJf,mBAIXyC,EAJW,KAILC,EAJK,OAKY1C,mBAAS,GALrB,mBAKX2C,EALW,KAKFC,EALE,KAMZzC,EAAUC,cAEV4C,EAAa,SAAAC,GAEXP,EADAO,EAAS,GAAKA,GAAUN,EAChBO,OAAOC,SAASF,GAEhB,IAsBhB,OAJAgB,qBAAU,WAbN1D,EAAYkD,IAAZ,8CAAgE,IAARhB,EAAK,IAAS,CAAChC,iBAAiB,IACvF5B,MAAK,SAAA6B,GACFyL,EAAUzL,EAASnB,KAAKmE,SACxBd,EAAWe,KAAKC,OAAOlD,EAASnB,KAAKsE,MAAM,GAAK,IAAM,MAEzDsC,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,SACfxH,IACAI,EAAQQ,KAAK,gBAOtB,CAAC8B,IAGA,sBAAK7B,UAAU,kBAAf,WACMoL,EAAczK,IAAM,sBAAKX,UAAU,iBAAf,UACjBsL,EAAO/K,OAAS,GAAK,qCAAE,+CACxB,wCAAU,uBAAOiD,KAAK,SAASxD,UAAU,qCAAqC4D,MAAO/B,EAAMgC,SAAU,SAAAV,GAAC,OAAIf,EAAWe,EAAEW,OAAOF,UAA9H,OAA4I7B,KAC5I,sBAAK/B,UAAU,eAAf,UACc,IAAT6B,GAAc,sBAAM7B,UAAU,cAAcE,QAAS,kBAAMkC,EAAWP,EAAK,IAA7D,eACdA,IAASE,GAAW,sBAAM/B,UAAU,cAAcE,QAAS,kBAAMkC,EAAWP,EAAK,IAA7D,sBAGvByJ,EAAO/K,OAAS,GAAK,8CAE1B+K,EAAO/K,OAAS,IAAM6K,EAAczK,IAAM2K,EAAO9K,KAAI,SAAC0H,EAAOxH,GAAR,OAAkB,cAAC,EAAD,CAAewH,MAAOA,EAAmB+C,YAAaI,GAApB3K,MACzG0K,EAAczK,IAAM,cAAC,EAAD,CAAgBuH,MAAOkD,EAAeH,YAAaI,QCjBrEG,EAnCO,WAAO,IAAD,EAEEpM,mBAAS,IAFX,mBAEjBmF,EAFiB,KAEVkH,EAFU,OAGYrM,oBAAS,GAHrB,mBAGjB0F,EAHiB,KAGL2B,EAHK,OAIIrH,mBAAS,IAJb,mBAIjB8F,EAJiB,KAITC,EAJS,KAmBxB,OACI,qBAAKnF,UAAU,iBAAf,SACI,uBAAMA,UAAU,aAAasD,SAfhB,SAAAH,GACjBA,EAAEC,iBACFzD,EAAYC,KAAK,uBAAwB,CAAC2E,UACzCtG,MAAK,SAAA6B,GACFqF,EAAU,IACVsB,GAAc,MAEjBlB,OAAM,SAAAC,GACHiB,GAAc,GACdtB,EAAUK,EAAM1F,SAASnB,UAMzB,UACI,gDACCmG,GAAc,qBAAK9E,UAAU,eAAf,wCACf,sBAAKA,UAAU,aAAf,UACI,uBAAOwD,KAAK,QAAQxD,UAAU,aAAayF,YAAY,SAAS7B,MAAOW,EAAOV,SAAU,SAAAV,GAAC,OAAIsI,EAAStI,EAAEW,OAAOF,UAC9GsB,EAAOX,OAASW,EAAOX,MAAM/D,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,MACtFwE,EAAOS,kBAAoBT,EAAOS,iBAAiBnF,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAEjH,uBAAO8C,KAAK,SAASxD,UAAU,yBAAyB4D,MAAM,gBCc/D8H,EA1Cc,WAAO,IAAD,EACKtM,oBAAS,GADd,mBACxB0F,EADwB,KACZ2B,EADY,OAEHrH,mBAAS,IAFN,mBAExB8F,EAFwB,KAEhBC,EAFgB,OAGS/F,mBAAS,IAHlB,mBAGxB2H,EAHwB,KAGVC,EAHU,OAIS5H,mBAAS,IAJlB,mBAIxB6H,EAJwB,KAIVC,EAJU,OAKRf,cAAfwF,EALuB,EAKvBA,IAAKC,EALkB,EAKlBA,MAgBb,OACI,qBAAK5L,UAAU,iBAAf,SACI,uBAAMA,UAAU,aAAasD,SAhBhB,SAAAH,GACjBA,EAAEC,iBAEFzD,EAAYC,KADA,+BACU,CAAC+L,MAAKC,QAAOvE,cAAeN,EAAcO,cAAeL,IAC9EhJ,MAAK,SAAA6B,GACF2G,GAAc,GACdtB,EAAU,OAEbI,OAAM,SAAAC,GACHiB,GAAc,GACdtB,EAAUK,EAAM1F,SAASnB,UAMzB,UACI,kDACCmG,GAAc,qBAAK9E,UAAU,eAAf,8BACf,sBAAKA,UAAU,aAAf,UACI,uBAAOwD,KAAK,WAAWxD,UAAU,aAAayF,YAAY,eAAe7B,MAAOmD,EAAclD,SAAU,SAAAV,GAAC,OAAI6D,EAAgB7D,EAAEW,OAAOF,UACrIsB,EAAOmC,eAAiBnC,EAAOmC,cAAc7G,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAE3G,sBAAKV,UAAU,aAAf,UACI,uBAAOwD,KAAK,WAAWxD,UAAU,aAAayF,YAAY,qBAAqB7B,MAAOqD,EAAcpD,SAAU,SAAAV,GAAC,OAAI+D,EAAgB/D,EAAEW,OAAOF,UAC3IsB,EAAOoC,eAAiBpC,EAAOoC,cAAc9G,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,MACtGwE,EAAOS,kBAAoBT,EAAOS,iBAAiBnF,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,MAC5GwE,EAAO0G,OAAS1G,EAAO0G,MAAMpL,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAE3F,uBAAO8C,KAAK,SAASxD,UAAU,yBAAyB4D,MAAM,uBCQ/DiI,G,MA1CI,WAAO,IACf1M,EAAkBD,qBAAWX,GAA7BY,eACDI,EAAUC,cAgBhB,OAdA6D,qBAAU,WACN1D,EAAYkD,IAAI,aAAc,CAAChD,iBAAiB,IAC/C5B,MAAK,SAAA6B,GACGA,EAASnB,KAAKwB,WACfhB,IACAI,EAAQQ,KAAK,kBAGpBwF,OAAM,SAAAC,GACHrG,IACAI,EAAQQ,KAAK,eAElB,IAGC,sBAAKC,UAAU,kBAAf,UACI,sBAAKA,UAAU,cAAf,UACI,wCACA,gCACI,cAAC,IAAD,CAAMC,GAAG,eAAT,SAAwB,qBAAKD,UAAU,cAAf,0BACxB,cAAC,IAAD,CAAMC,GAAG,qBAAT,SAA8B,qBAAKD,UAAU,cAAf,8BAGtC,sBAAKA,UAAU,cAAf,UACI,mDACA,gCACI,cAAC,IAAD,CAAMC,GAAG,mBAAT,SAA4B,qBAAKD,UAAU,cAAf,qCAC5B,cAAC,IAAD,CAAMC,GAAG,yBAAT,SAAkC,qBAAKD,UAAU,cAAf,yCAG1C,sBAAKA,UAAU,cAAf,UACI,qDACA,cAAC,IAAD,CAAMC,GAAG,2BAAT,SAAoC,qBAAKD,UAAU,cAAf,0CCnBrCK,EArBE,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAEf,OACI,qBAAKN,UAAU,YAAf,SACKM,EAAMC,OAASD,EAAME,KAAI,SAACC,EAAMC,GAAP,OACtB,cAAC,IAAD,CAAMT,GAAE,8BAAyBQ,EAAKE,IAAtC,SAA4C,sBAAKX,UAAU,OAAf,UACxC,qBAAKY,IAAKH,EAAKI,OAAON,OAAS,EAAIE,EAAKI,OAAO,GAAGC,IAAM,sCAAuCC,IAAI,GAAGf,UAAU,eAChH,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,YAAf,SAA4BS,EAAKO,OACjC,sBAAKhB,UAAU,gBAAf,uBAA0CS,EAAKQ,YAC/C,sBAAKjB,UAAU,uBAAf,UACKS,EAAKS,aAAe,sBAAKlB,UAAU,iBAAf,UAAiCS,EAAKU,UAAtC,aACrB,sBAAKnB,UAAWS,EAAKS,YAAc,sBAAwB,aAA3D,UAA0ET,EAAKW,MAA/E,aACCX,EAAKY,cAAgBZ,EAAKQ,SAAW,EAAI,qBAAKjB,UAAU,oBAAf,uBAAqD,qBAAKA,UAAU,qBAAf,gCANvEU,KAFmCA,QAYtE,qBAAKV,UAAU,aAAf,+BC2GF8L,EArHS,WAAO,IAAD,EAEE1M,mBAAS,CACjCmC,KAAM,GACNC,SAAU,EACVC,SAAU,EACVC,QAAS,KANa,mBAEnBC,EAFmB,KAEXC,EAFW,OASFxC,mBAAS,GATP,mBASnByC,EATmB,KASbC,EATa,OAUI1C,mBAAS,GAVb,mBAUnB2C,EAVmB,KAUVC,EAVU,OAWA5C,mBAAS,IAXT,mBAWnBkB,EAXmB,KAWZ2B,EAXY,OAYgB7C,oBAAS,GAZzB,mBAYnB8C,EAZmB,KAYJC,EAZI,KAapB5C,EAAUC,cACTL,EAAkBD,qBAAWX,GAA7BY,eAcDiD,EAAa,SAAAC,GAEXP,EADAO,EAAS,GAAKA,GAAUN,EAChBO,OAAOC,SAASF,GAEhB,IAIVG,EAAW,WACb,IAAM1B,EAAG,4CAAiD,IAARe,EAAK,IACnDY,EAAS,CACTd,OAAQA,EAAOJ,KACfmB,UAAWf,EAAOH,SAClBmB,UAAWhB,EAAOF,SAClBmB,SAAUjB,EAAOD,SAErB/B,EAAYkD,IAAI/B,EAAK,CAACjB,iBAAiB,EAAM4C,OAAQA,IACpDxE,MAAK,SAAA6B,GACFmC,EAASnC,EAASnB,KAAKmE,SACvBd,EAAWe,KAAKC,OAAOlD,EAASnB,KAAKsE,MAAQ,GAAK,IAAM,MAE3DsC,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,SACfxH,IACAI,EAAQQ,KAAK,eAEjBqG,QAAQC,IAAIb,EAAM1F,UAClBsG,QAAQC,IAAIb,EAAMmB,YAIpBzD,EAAY,uCAAG,WAAMC,GAAN,SAAAzD,EAAA,sDACjByD,EAAEC,iBACFZ,IAFiB,2CAAH,sDASlB,OAJAa,qBAAU,WACNb,MACD,CAACX,IAGA,qCACA,qBAAK7B,UAAS,gBAAWkC,EAAgB,GAAK,kBAA9C,SACI,uBAAMlC,UAAU,cAAcsD,SAAUJ,EAAxC,UACI,gCACI,2CACA,gCACI,uBAAOK,QAAQ,aAAf,6BACA,uBAAO5C,GAAG,aAAaX,UAAU,oBAAoBwD,KAAK,OAAOC,UAAU,MAAMC,KAAK,KAAKC,aAAa,MAAMC,MAAOjC,EAAOJ,KAAMsC,SA5DnI,SAAAV,GACfvB,EAAU,2BAAID,GAAL,IAAaJ,KAAM4B,EAAEW,OAAOF,eA6DzB,gCACI,uBAAOL,QAAQ,YAAf,oBACA,uBAAO5C,GAAG,YAAYX,UAAU,uCAAuCwD,KAAK,SAASE,KAAK,IAAIK,IAAI,IAAIH,MAAOjC,EAAOH,SAAUqC,SA5D3H,SAAAV,GACnBvB,EAAU,2BAAID,GAAL,IAAaH,SAAU2B,EAAEW,OAAOF,YAyD7B,IAGI,uBAAOjD,GAAG,YAAYX,UAAU,uCAAuCwD,KAAK,SAASE,KAAK,IAAIK,IAAI,IAAIH,MAAOjC,EAAOF,SAAUoC,SAzD3H,SAAAV,GACnBvB,EAAU,2BAAID,GAAL,IAAaF,SAAU0B,EAAEW,OAAOF,kBA2DjC,uBAAO5D,UAAU,qBAAqBwD,KAAK,SAASI,MAAM,SAAS1D,QAAS,kBAAMiC,GAAiB,MACnG,gCACI,0CACA,2CACA,gCACI,uBAAOqB,KAAK,QAAQxD,UAAU,oBAAoBgB,KAAK,QAAQL,GAAG,SAASiD,MAAM,IAAIC,SAAU,SAAAV,GAAC,OAAIvB,EAAU,2BAAID,GAAL,IAAaD,QAASyB,EAAEW,OAAOF,YAC5I,uBAAOL,QAAQ,SAAf,uBACA,uBAAOC,KAAK,QAAQxD,UAAU,oBAAoBgB,KAAK,QAAQL,GAAG,SAASiD,MAAM,IAAIC,SAAU,SAAAV,GAAC,OAAIvB,EAAU,2BAAID,GAAL,IAAaD,QAASyB,EAAEW,OAAOF,YAC5I,uBAAOL,QAAQ,SAAf,8BAGR,sBAAKvD,UAAU,gBAAf,UACI,8BACA,wCAAU,uBAAOwD,KAAK,SAASxD,UAAU,uCAAuC4D,MAAO/B,EAAMmC,QAAS,SAAAb,GAAC,OAAIA,EAAEW,OAAOG,UAAUC,OAAQ,SAAAf,GAAC,OAAIf,EAAWe,EAAEW,OAAOF,UAA/J,OAA6K7B,OAE7K,gCACc,IAATF,GAAc,sBAAM7B,UAAU,cAAcE,QAAS,kBAAMkC,EAAWP,EAAK,IAA7D,eACdA,IAASE,GAAW,sBAAM/B,UAAU,cAAcE,QAAS,kBAAMkC,EAAWP,EAAK,IAA7D,0BAKrC,qBAAK7B,UAAU,eAAeE,QAAS,kBAAMiC,GAAkBD,IAA/D,SAAgFA,EAAgB,cAAC,IAAD,IAAoB,cAAC,IAAD,MACpH,sBAAKlC,UAAU,QAAf,UACQ,sBAAMA,UAAS,qBAAyB,IAAT6B,EAAa,GAAK,WAAa3B,QAAS,kBAAMkC,EAAWP,EAAK,IAA7F,eACA,+BAAI,uBAAO2B,KAAK,SAASxD,UAAU,+BAA+B4D,MAAO/B,EAAMmC,QAAS,SAAAb,GAAC,OAAIA,EAAEW,OAAOG,UAAUJ,SAAU,SAAAV,GAAC,OAAIf,EAAWe,EAAEW,OAAOF,UAAnJ,OAAiK7B,KACjK,sBAAM/B,UAAS,qBAAgB6B,IAASE,EAAU,GAAK,WAAa7B,QAAS,kBAAMkC,EAAWP,EAAK,IAAnG,kBAER,cAACkK,EAAD,CAAezL,MAAOA,QCCf0L,EApHU,WAAO,IAAD,EAEH5M,mBAAS,CAC7B4B,KAAM,GACNwG,YAAa,GACbvG,SAAU,GACVG,MAAO,EACPP,OAAQ,KAPe,mBAEpBJ,EAFoB,KAEdgH,EAFc,OASerI,mBAAS,uCATxB,mBASpBsI,EAToB,KASLC,EATK,KAUpBxI,EAAkBD,qBAAWX,GAA7BY,eAVoB,EAWKC,mBAAS,GAXd,mBAWpB6B,EAXoB,KAWV2G,EAXU,OAYKxI,oBAAS,GAZd,mBAYpBU,EAZoB,KAYV+H,EAZU,OAaDzI,mBAAS,IAbR,mBAapBoG,EAboB,KAabsC,EAba,KAcnBnH,EAAOwF,cAAPxF,GACFpB,EAAUC,cAEhB6D,qBAAU,WACN,IAAMvC,EAAG,2BAAuBH,EAAvB,KACThB,EAAYkD,IAAI/B,EAAK,CAACjB,iBAAiB,IACtC5B,MAAK,SAAA6B,GACF2H,EAAQ3H,EAASnB,MACbmB,EAASnB,KAAKkC,OAAON,OAAS,GAC9BoH,EAAiB7H,EAASnB,KAAKkC,OAAO,GAAGC,QAGhDyE,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IAEJI,EAAQQ,KAAK,mBAElB,IAsCH,OACI,qBAAKC,UAAU,kBAAf,SACI,sBAAKA,UAAU,eAAf,UACI,sBAAKA,UAAU,sBAAf,UACI,qBAAKY,IAAK8G,EAAe3G,IAAI,OAAOf,UAAU,uBAC9C,qBAAKA,UAAU,4BAAf,SACKS,EAAKI,OAAON,OAAS,GAAKE,EAAKI,OAAOL,KAAI,SAACuH,EAAOrH,GAAR,OACvC,qBAAKE,IAAKmH,EAAMjH,IAAKC,IAAI,aAAyBf,UAAU,2BAC5DE,QAAS,SAAAiD,GAAC,OAAIwE,EAAiBxE,EAAEW,OAAOlD,OADGF,QAInD,cAAC,IAAD,CAAMT,GAAE,kCAA6BU,GAArC,SAA2C,qBAAKX,UAAU,cAAf,8BAE/C,qBAAKA,UAAU,oCACf,sBAAKA,UAAU,oBAAf,UACI,qBAAKA,UAAU,oBAAf,SAAoCS,EAAKO,OACzC,qBAAKhB,UAAU,2BAAf,SAA2CS,EAAK+G,cAChD,sBAAKxH,UAAU,sBAAf,UACI,sBAAKA,UAAU,gBAAf,uBAA0CS,EAAKQ,YAC9CR,EAAKS,aAAe,uBAAMlB,UAAU,iBAAhB,UAAkCS,EAAKU,UAAvC,QACrB,uBAAMnB,UAAWS,EAAKS,YAAc,sBAAwB,aAA5D,UAA2ET,EAAKW,MAAhF,QACCX,EAAKS,aAAe,oBAAIlB,UAAU,cAAd,6BAExBS,EAAKY,cAAgBZ,EAAKQ,SAAW,EAAI,uBAAMjB,UAAU,gBAAgBsD,SAzCrE,SAAAH,GACjBA,EAAEC,iBACFjE,IACA,IAAM2B,EAAG,qBAAiBH,EAAjB,KACThB,EAAYC,KAAKkB,EAAK,GAAI,CAACjB,iBAAiB,EAAM4C,OAAQ,CAACxB,cAC1DhD,MAAK,SAAA6B,GACF+H,EAAY/H,EAASnB,MACrBmJ,EAAS,OAEZvC,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfpH,EAAQQ,KAAK,UAEjB8H,EAAY,IACZC,EAAStC,EAAM1F,SAASnB,UA2B0B,UACtC,sBAAKqB,UAAU,gBAAf,UACI,qBAAKA,UAAU,gBAAf,wBACA,sBAAKA,UAAU,mBAAf,UACI,qBAAKE,QAnDR,WACjBe,EAAW,GACX2G,EAAY3G,EAAS,IAiD+BjB,UAAU,WAA1C,eACA,uBAAOwD,KAAK,SAASxD,UAAU,iBAAiB4D,MAAO3C,EAAU4C,SAhEtE,SAAAV,GACfA,EAAEW,OAAOF,MAAQ,EACjBgE,EAAYtF,OAAOC,SAASY,EAAEW,OAAOF,QAErCgE,EAAY,MA6DQ,qBAAK1H,QAzDR,WACrB0H,EAAY3G,EAAS,IAwDmCjB,UAAU,WAA1C,qBAGR,uBAAOwD,KAAK,SAASI,MAAM,cAAc5D,UAAU,gBAClDF,EAASkI,QAAU,qBAAKhI,UAAU,mBAAf,SAAmCF,EAASkI,SAC/DxC,EAAMwC,QAAU,qBAAKhI,UAAU,gBAAf,SAAgCwF,EAAMwC,YACjD,qBAAKhI,UAAU,0BAAf,8BACV,sBAAKA,UAAU,YAAf,UACQ,cAAC,IAAD,CAAMC,GAAE,2BAAsBU,GAA9B,SAAoC,qBAAKX,UAAU,cAAf,yBACpC,cAAC,IAAD,CAAMC,GAAE,6BAAwBU,GAAhC,SAAsC,qBAAKX,UAAU,gBAAf,uCC3DnDiM,EArDE,SAAC,GAAuD,IAAtDxL,EAAqD,EAArDA,KAAMgH,EAA+C,EAA/CA,QAASvC,EAAsC,EAAtCA,OAAQJ,EAA8B,EAA9BA,WAAY5B,EAAkB,EAAlBA,aAClD,OACI,qBAAKlD,UAAU,kBAAf,SACI,qBAAKA,UAAU,iBAAf,SACI,uBAAMA,UAAU,OAAOsD,SAAUJ,EAAjC,UACI,2CACC4B,GAAc,qBAAK9E,UAAU,eAAf,wBACf,sBAAKA,UAAU,aAAf,kBAEI,uBAAOwD,KAAK,OAAOxD,UAAU,aAAayF,YAAY,OAAO7B,MAAOnD,EAAKO,KAAM6C,SAAU,SAAAV,GAAC,OAAIsE,EAAQ,2BAAIhH,GAAL,IAAWO,KAAMmC,EAAEW,OAAOF,YAC9HsB,EAAOlE,MAAQkE,EAAOlE,KAAKR,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAEzF,sBAAKV,UAAU,aAAf,yBAEI,uBAAOwD,KAAK,OAAOxD,UAAU,aAAayF,YAAY,cAAc7B,MAAOnD,EAAK+G,YAAa3D,SAAU,SAAAV,GAAC,OAAIsE,EAAQ,2BAAIhH,GAAL,IAAW+G,YAAarE,EAAEW,OAAOF,YACnJsB,EAAOsC,aAAetC,EAAOsC,YAAYhH,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAEvG,sBAAKV,UAAU,aAAf,sBAEI,uBAAOwD,KAAK,SAASxD,UAAU,aAAayF,YAAY,WAAW7B,MAAOnD,EAAKQ,SAAU4C,SAAU,SAAAV,GAAC,OAAIsE,EAAQ,2BAAIhH,GAAL,IAAWQ,SAAUkC,EAAEW,OAAOF,YAC5IsB,EAAOjE,UAAYiE,EAAOjE,SAAST,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAEjG,sBAAKV,UAAU,aAAf,mBAEI,uBAAOwD,KAAK,SAAS0I,KAAK,OAAOlM,UAAU,aAAayF,YAAY,QAAQ7B,MAAOnD,EAAKW,MAAOyC,SAAU,SAAAV,GAAC,OAAIsE,EAAQ,2BAAIhH,GAAL,IAAWW,MAAO+B,EAAEW,OAAOF,YAC/IsB,EAAO9D,OAAS8D,EAAO9D,MAAMZ,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAE3F,sBAAKV,UAAU,aAAf,2CAEI,uBAAOwD,KAAK,SAAS0I,KAAK,OAAOlM,UAAU,aAAayF,YAAY,gCAAgC7B,MAAOnD,EAAKU,UAAW0C,SAAU,SAAAV,GAAC,OAAIsE,EAAQ,2BAAIhH,GAAL,IAAWU,UAAWgC,EAAEW,OAAOF,YAC/KsB,EAAO/D,WAAa+D,EAAO/D,UAAUX,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAEnG,sBAAKV,UAAU,iBAAf,UACI,gCACI,uBAAOwD,KAAK,WAAW2I,QAAS1L,EAAKS,YAAa2C,SAAU,SAAAV,GAAC,OAAIsE,EAAQ,2BAAIhH,GAAL,IAAWS,aAAcT,EAAKS,kBACtG,mDAEJ,gCACI,uBAAOsC,KAAK,WAAW2I,QAAS1L,EAAKY,aAAcwC,SAAU,SAAAV,GAAC,OAAIsE,EAAQ,2BAAIhH,GAAL,IAAWY,cAAeZ,EAAKY,mBACxG,oDAEJ,gCACI,uBAAOmC,KAAK,WAAW2I,QAAS1L,EAAK2L,WAAYvI,SAAU,SAAAV,GAAC,OAAIsE,EAAQ,2BAAIhH,GAAL,IAAW2L,YAAa3L,EAAK2L,iBACpG,qDAGR,uBAAO5I,KAAK,SAASxD,UAAU,yBAAyB4D,MAAM,iBCqBnEyI,EA9DO,WAAO,IACjB1L,EAAOwF,cAAPxF,GADgB,EAEAvB,mBAAS,CAC9B4B,KAAM,GACNwG,YAAa,GACbpG,MAAO,EACPH,SAAU,EACVC,aAAa,EACbC,UAAW,EACXiL,YAAY,EACZ/K,cAAc,IAVO,mBAEjBZ,EAFiB,KAEXgH,EAFW,OAYIrI,mBAAS,IAZb,mBAYjB8F,EAZiB,KAYTC,EAZS,OAaY/F,oBAAS,GAbrB,mBAajB0F,EAbiB,KAaL2B,EAbK,KAcjBtH,EAAkBD,qBAAWX,GAA7BY,eACDI,EAAUC,cAEhB6D,qBAAU,WACN1D,EAAYkD,IAAZ,2BAAoClC,EAApC,KAA2C,CAACd,iBAAiB,IAC5D5B,MAAK,SAAA6B,GACF2H,EAAQ3H,EAASnB,SAEpB4G,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IACAI,EAAQQ,KAAK,eACoB,MAA1ByF,EAAM1F,SAAS6G,QACtBxH,IACAI,EAAQQ,KAAK,WAEbR,EAAQQ,KAAK,mBAGtB,IAwBH,OACI,cAAC,EAAD,CAAUU,KAAMA,EAAMgH,QAASA,EAASvC,OAAQA,EAAQJ,WAAYA,EAAY5B,aAvB/D,SAAAC,GACjBA,EAAEC,iBACFgD,QAAQC,MACR1G,EAAY+G,IAAZ,2BAAoC/F,EAApC,KAA2CF,EAAM,CAACZ,iBAAiB,IAClE5B,MAAK,SAAA6B,GACF2G,GAAc,GACdtB,EAAU,OAEbI,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IACAI,EAAQQ,KAAK,eACoB,MAA1ByF,EAAM1F,SAAS6G,QACtBxH,IACAI,EAAQQ,KAAK,YAEboF,EAAUK,EAAM1F,SAASnB,MACzB8H,GAAc,WCQf6F,EA5DS,WAAO,IAAD,EACFlN,mBAAS,CAC7B4B,KAAM,GACNwG,YAAa,GACbpG,MAAO,EACPH,SAAU,EACVC,aAAa,EACbC,UAAW,EACXiL,YAAY,EACZ/K,cAAc,IATQ,mBACnBZ,EADmB,KACbgH,EADa,OAWErI,mBAAS,IAXX,mBAWnB8F,EAXmB,KAWXC,EAXW,OAYU/F,oBAAS,GAZnB,mBAYnB0F,EAZmB,KAYP2B,EAZO,KAapBlH,EAAUC,cACTL,EAAkBD,qBAAWX,GAA7BY,eAEPkE,qBAAU,WACN1D,EAAYkD,IAAI,aAAc,CAAChD,iBAAiB,IAC/C5B,MAAK,SAAA6B,GACGA,EAASnB,KAAKwB,WACfhB,IACAI,EAAQQ,KAAK,iBAGpBwF,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,SACfxH,IACAI,EAAQQ,KAAK,gBAGtB,IAyBH,OACI,cAAC,EAAD,CAAUU,KAAMA,EAAMgH,QAASA,EAASvC,OAAQA,EAAQJ,WAAYA,EAAY5B,aAxB/D,SAAAC,GACjBA,EAAEC,iBACFzD,EAAYC,KAAK,oBAAqBa,EAAM,CAACZ,iBAAiB,IAC7D5B,MAAK,SAAA6B,GAAa,IACPa,EAAOb,EAASnB,KAAhBgC,GACRwE,EAAU,IACVsB,GAAc,GACdlH,EAAQQ,KAAR,8BAAoCY,OAEvC4E,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IACAI,EAAQQ,KAAK,eACoB,MAA1ByF,EAAM1F,SAAS6G,QACtBxH,IACAI,EAAQQ,KAAK,YAEb0G,GAAc,GACdtB,EAAUK,EAAM1F,SAASnB,cCd1B4N,EArCS,WAAO,IACnB5L,EAAOwF,cAAPxF,GACFpB,EAAUC,cACRL,EAAmBD,qBAAWX,GAA9BY,eAHkB,EAIUC,oBAAS,GAJnB,mBAInB0F,EAJmB,KAIP2B,EAJO,KA0B1B,OApBApD,qBAAU,WACN1D,EAAY6M,OAAZ,2BAAuC7L,EAAvC,KAA8C,CAACd,iBAAiB,IAC/D5B,MAAK,SAAA6B,GACF2G,GAAc,MAEjBlB,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IACAI,EAAQQ,KAAK,eACoB,MAA1ByF,EAAM1F,SAAS6G,QACtBxH,IACAI,EAAQQ,KAAK,WACoB,MAA1ByF,EAAM1F,SAAS6G,OACtBpH,EAAQQ,KAAK,cAEb0G,GAAc,QAGvB,IAGC,qBAAKzG,UAAU,YAAf,SACI,gCACK8E,EAAa,0DACZ,2GACF,cAAC,IAAD,CAAM7E,GAAG,eAAT,SAAwB,qBAAKD,UAAU,cAAf,sC,QCiGzByM,EAhIS,WAAO,IACnB9L,EAAOwF,cAAPxF,GACFpB,EAAUC,cACTL,EAAkBD,qBAAWX,GAA7BY,eAHmB,EAIEC,mBAAS,IAJX,mBAInByB,EAJmB,KAIX6L,EAJW,KAKpBC,EAAcC,mBALM,EAMUxN,oBAAS,GANnB,mBAMnB0F,EANmB,KAMP2B,EANO,OAOErH,mBAAS,IAPX,mBAOnB8F,EAPmB,KAOXC,EAPW,KASpB0H,EAAY,SAAAlM,GACdhB,EAAYkD,IAAZ,2BAAoClC,EAApC,KAA2C,CAACd,iBAAiB,IAC5D5B,MAAK,SAAA6B,GACF4M,EAAU5M,EAASnB,KAAKkC,WAE3B0E,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IACAI,EAAQQ,KAAK,eACoB,MAA1ByF,EAAM1F,SAAS6G,QACtBxH,IACAI,EAAQQ,KAAK,WAEbR,EAAQQ,KAAK,kBAKzBsD,qBAAU,WACNwJ,EAAUlM,KACX,IAqEH,OACI,qBAAKX,UAAU,kBAAf,SACI,sBAAKA,UAAU,iBAAf,UACI,6CACA,qBAAKA,UAAU,SAAf,SACKa,EAAOL,KAAI,SAACuH,EAAOrH,GAAR,OACR,sBAAKV,UAAU,iBAAf,UACI,qBAAKY,IAAKmH,EAAMjH,IAAKC,IAAI,OAAmBf,UAAU,cAAjBU,GACrC,iCACMqH,EAAM+E,SAAW,qBAAK9M,UAAU,cAAcE,QAAS,kBA9CnE6M,EA8CmFhF,EAAMpH,QA7CvGhB,EAAY+G,IAAZ,kCAA2CqG,EAA3C,KAAuD,GAAI,CAAClN,iBAAiB,IAC5E5B,MAAK,SAAA6B,GACF+M,EAAUlM,MAEb4E,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IACAI,EAAQQ,KAAK,eACoB,MAA1ByF,EAAM1F,SAAS6G,QACtBxH,IACAI,EAAQQ,KAAK,WAEboF,EAAUK,EAAM1F,SAASnB,SAbnB,IAAAoO,GA8C6B,yBAClBhF,EAAM+E,SAAW,qBAAK9M,UAAU,kBAAf,kBAClB,qBAAKA,UAAU,gBAAgBE,QAAS,kBA9BhD6M,EA8BkEhF,EAAMpH,QA7BxFhB,EAAY6M,OAAZ,kCAA8CO,EAA9C,KAA0D,CAAClN,iBAAiB,IAC3E5B,MAAK,SAAA6B,GACF+M,EAAUlM,GACV8F,GAAc,MAEjBlB,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IACAI,EAAQQ,KAAK,eACoB,MAA1ByF,EAAM1F,SAAS6G,QACtBxH,IACAI,EAAQQ,KAAK,WAEboF,EAAUK,EAAM1F,SAASnB,SAdjB,IAAAoO,GA8BQ,yBAL6BrM,QAU7C,sBAAKV,UAAU,aAAf,UACK8E,GAAc,sBAAK9E,UAAU,eAAf,UAA+B2M,EAAYK,QAAQC,MAAM1M,OAAzD,mBACf,sBAAKP,UAAU,aAAf,wBAEI,uBAAOwD,KAAK,OAAO0J,UAAQ,EAACC,IAAKR,IACjC,qBAAK3M,UAAU,cAAcE,QAxF9B,SAAAiD,GACfA,EAAEC,iBACF,IAAMvC,EAAS8L,EAAYK,QAAQC,MACnC,GAAIpM,EAAON,OAAQ,CACf,IAAMgG,EAAW,IAAI6G,SACrB,YAAIvM,GAAQwM,SAAQ,SAAAtF,GAAK,OAAIxB,EAAS+G,OAAO,SAAUvF,MACvDpI,EAAY4N,MAAZ,2BAAsC5M,EAAtC,KAA6C4F,EAC7C,CAAC1G,iBAAiB,EAAM2N,QAAS,CAAC,eAAgB,yBACjDvP,MAAK,SAAA6B,GACF2G,GAAc,GACdtB,EAAU,IACV0H,EAAUlM,MAEb4E,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IACAI,EAAQQ,KAAK,eACoB,MAA1ByF,EAAM1F,SAAS6G,QACtBxH,IACAI,EAAQQ,KAAK,WAEboF,EAAUK,EAAM1F,SAASnB,cAIjC8H,GAAc,GACdtB,EAAU,CAAC6C,OAAQ,sCA8DP,yBACC9C,EAAO8C,QAAU,qBAAKhI,UAAU,aAAf,SAA6BkF,EAAO8C,qBClG/DyF,EA3BY,SAAC,GAA+D,IAA9DC,EAA6D,EAA7DA,SAAUC,EAAmD,EAAnDA,YAAazI,EAAsC,EAAtCA,OAAQJ,EAA8B,EAA9BA,WAAY5B,EAAkB,EAAlBA,aAEpE,OACI,qBAAKlD,UAAU,iBAAf,SACI,uBAAMA,UAAU,aAAasD,SAAUJ,EAAvC,UACI,iDACC4B,GAAc,qBAAK9E,UAAU,eAAf,mCACf,sBAAKA,UAAU,aAAf,kBAEI,uBAAOwD,KAAK,OAAOxD,UAAU,aAAayF,YAAY,OAAO7B,MAAO8J,EAAS1M,KAAM6C,SAAU,SAAAV,GAAC,OAAIwK,EAAY,2BAAID,GAAL,IAAe1M,KAAMmC,EAAEW,OAAOF,YAC1IsB,EAAOlE,MAAQkE,EAAOlE,KAAKR,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAEzF,sBAAKV,UAAU,aAAf,mBAEI,uBAAOwD,KAAK,SAASxD,UAAU,aAAakM,KAAK,OAAOzG,YAAY,QAAQ7B,MAAO8J,EAAStM,MAAOyC,SAAU,SAAAV,GAAC,OAAIwK,EAAY,2BAAID,GAAL,IAAetM,MAAO+B,EAAEW,OAAOF,YAC3JsB,EAAO9D,OAAS8D,EAAO9D,MAAMZ,KAAI,SAACkF,EAAShF,GAAV,OAAoB,qBAAKV,UAAU,aAAf,SAAyC0F,GAARhF,SAE3F,gCACI,uBAAO8C,KAAK,WAAW2I,QAASuB,EAASrM,aAAcwC,SAAU,kBAAM8J,EAAY,2BAAID,GAAL,IAAerM,cAAeqM,EAASrM,mBACzH,oDAEJ,uBAAOmC,KAAK,SAASxD,UAAU,iCC4BhC4N,EA3Ca,WAAO,IAAD,EAEExO,mBAAS,CACtC4B,KAAM,GACNI,MAAO,EACPC,cAAc,IALa,mBAEvBqM,EAFuB,KAEbC,EAFa,OAOMvO,oBAAS,GAPf,mBAOvB0F,EAPuB,KAOX2B,EAPW,OAQFrH,mBAAS,IARP,mBAQvB8F,EARuB,KAQfC,EARe,KASxB5F,EAAUC,cACTL,EAAkBD,qBAAWX,GAA7BY,eAuBP,OACI,cAAC,EAAD,CACAuO,SAAUA,EACVC,YAAaA,EACbzI,OAAQA,EACRJ,WAAYA,EACZ5B,aA3BiB,SAAAC,GACjBA,EAAEC,iBACFzD,EAAYC,KAAK,8BAA+B8N,EAAU,CAAC7N,iBAAiB,IAC3E5B,MAAK,SAAA6B,GACFqF,EAAU,IACVsB,GAAc,MAEjBlB,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IACAI,EAAQQ,KAAK,eACoB,MAA1ByF,EAAM1F,SAAS6G,QACtBxH,IACAI,EAAQQ,KAAK,YAEb0G,GAAc,GACdtB,EAAUK,EAAM1F,SAASnB,cCa1BkP,EA1CW,WAAO,IAAD,EAEMzO,mBAAS,IAFf,mBAErB0O,EAFqB,KAEVC,EAFU,KAGrB5O,EAAkBD,qBAAWX,GAA7BY,eACDI,EAAUC,cAkBhB,OAhBA6D,qBAAU,WACN1D,EAAYkD,IAAI,6BAA8B,CAAChD,iBAAiB,IAC/D5B,MAAK,SAAA6B,GACFiO,EAAajO,EAASnB,SAEzB4G,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IACAI,EAAQQ,KAAK,eACoB,MAA1ByF,EAAM1F,SAAS6G,SACtBxH,IACAI,EAAQQ,KAAK,gBAGtB,IAGC,sBAAKC,UAAU,kBAAf,UACI,qBAAKA,UAAU,iBAAf,SACK8N,EAAUvN,OAAS,kDAA4B,uDAEnDuN,EAAUtN,KAAI,SAACkN,EAAUhN,GAAX,OACX,cAAC,IAAD,CAAMT,GAAE,+BAA0ByN,EAAS/M,GAAnC,KAA0CX,UAAU,2BAA5D,SACA,8BACI,sBAAKA,UAAU,iBAAf,UACI,sBAAKA,UAAU,WAAf,UAA0B,0CAAmB,+BAAO0N,EAAS1M,UAC7D,sBAAKhB,UAAU,WAAf,UAA0B,2CAAoB,iCAAO0N,EAAStM,MAAhB,gBAC9C,sBAAKpB,UAAU,WAAf,UAA0B,kDAA2B,+BAAO0N,EAASrM,aAAe,MAAO,cAJzFX,YCmCXkN,EA9Da,WAAO,IAAD,EAEExO,mBAAS,CACtC4B,KAAM,GACNI,MAAO,EACPC,cAAc,IALa,mBAEvBqM,EAFuB,KAEbC,EAFa,OAOMvO,oBAAS,GAPf,mBAOvB0F,EAPuB,KAOX2B,EAPW,OAQFrH,mBAAS,IARP,mBAQvB8F,EARuB,KAQfC,EARe,KASxB5F,EAAUC,cACTL,EAAkBD,qBAAWX,GAA7BY,eACCwB,EAAOwF,cAAPxF,GAER0C,qBAAU,WACN1D,EAAYkD,IAAZ,qCAA8ClC,EAA9C,KAAqD,CAACd,iBAAiB,IACtE5B,MAAK,SAAA6B,GACF6N,EAAY7N,EAASnB,SAExB4G,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IACAI,EAAQQ,KAAK,eACoB,MAA1ByF,EAAM1F,SAAS6G,QACtBxH,IACAI,EAAQQ,KAAK,WAEbR,EAAQQ,KAAK,mBAGtB,IAuBH,OACI,cAAC,EAAD,CACA2N,SAAUA,EACVC,YAAaA,EACbzI,OAAQA,EACRJ,WAAYA,EACZ5B,aA3BiB,SAAAC,GACjBA,EAAEC,iBACFzD,EAAY+G,IAAZ,qCAA8C/F,EAA9C,KAAqD+M,EAAU,CAAC7N,iBAAiB,IAChF5B,MAAK,SAAA6B,GACFqF,EAAU,IACVsB,GAAc,MAEjBlB,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IACAI,EAAQQ,KAAK,eACoB,MAA1ByF,EAAM1F,SAAS6G,QACtBxH,IACAI,EAAQQ,KAAK,YAEb0G,GAAc,GACdtB,EAAUK,EAAM1F,SAASnB,cCI1BqP,EAtDY,WAAO,IAAD,EAEa5O,mBAAS,IAFtB,mBAEtB6O,EAFsB,KAEPC,EAFO,OAGL9O,mBAAS,GAHJ,mBAGtByC,EAHsB,KAGhBC,EAHgB,OAIC1C,mBAAS,GAJV,mBAItB2C,EAJsB,KAIbC,EAJa,KAKvBzC,EAAUC,cACTL,EAAkBD,qBAAWX,GAA7BY,eAmBPkE,qBAAU,WAhBN1D,EAAYkD,IAAZ,oDAAsE,IAARhB,EAAK,IAAS,CAAChC,iBAAiB,IAC7F5B,MAAK,SAAA6B,GACFoO,EAAiBpO,EAASnB,KAAKmE,SAC/Bd,EAAWe,KAAKC,OAAOlD,EAASnB,KAAKsE,MAAM,GAAK,IAAM,MAEzDsC,OAAM,SAAAC,GAC2B,MAA1BA,EAAM1F,SAAS6G,QACfxH,IACAI,EAAQQ,KAAK,eACoB,MAA1ByF,EAAM1F,SAAS6G,SACtBxH,IACAI,EAAQQ,KAAK,gBAOtB,CAAC8B,IAEJ,IAAMO,EAAa,SAAAC,GAEXP,EADAO,EAAS,GAAKA,GAAUN,EAChBO,OAAOC,SAASF,GAEhB,IAIhB,OACI,qBAAKrC,UAAU,kBAAf,SACI,sBAAKA,UAAU,iBAAf,UACKiO,EAAc1N,OAAS,GAAK,qCAAE,+CAC/B,wCAAU,uBAAOiD,KAAK,SAASxD,UAAU,qCAAqC4D,MAAO/B,EAAMgC,SAAU,SAAAV,GAAC,OAAIf,EAAWe,EAAEW,OAAOF,UAA9H,OAA4I7B,KAC5I,sBAAK/B,UAAU,eAAf,UACc,IAAT6B,GAAc,sBAAM7B,UAAU,cAAcE,QAAS,kBAAMkC,EAAWP,EAAK,IAA7D,eACdA,IAASE,GAAW,sBAAM/B,UAAU,cAAcE,QAAS,kBAAMkC,EAAWP,EAAK,IAA7D,qBAGxBoM,EAAczN,KAAI,SAAC2N,EAAczN,GAAf,OAAyB,qBAAKV,UAAU,iBAAf,SAA6CmO,EAAaC,SAArB1N,OAC/EuN,EAAc1N,OAAS,GAAK,wDCoC/B8N,GA1DH,WAAO,IAAD,EAEgBjP,mBAAS,IAFzB,mBAETX,EAFS,KAECC,EAFD,KAIVS,EAAc,uCAAG,sBAAAO,EAAA,sEACfC,EAAYkD,IAAI,aAAc,CAAChD,iBAAiB,IACrD5B,MAAK,SAAA6B,GACJpB,EAAYoB,EAASnB,SAEtB4G,OAAM,SAAAC,GACL9G,EAAY,OANO,2CAAH,qDAcpB,OAJA2E,qBAAU,WACRlE,MACC,IAGD,cAAC,IAAD,UACE,eAAC,EAAYmP,SAAb,CAAsB1K,MAAO,CAACnF,WAAUU,kBAAxC,UACE,qBAAKa,UAAU,cAAf,SACE,cAAC,EAAD,MAEF,qBAAKA,UAAU,OAAf,SACA,eAAC,IAAD,WACI,cAAC,IAAD,CAAOuO,KAAK,IAAIC,UAAWlN,EAAYmN,OAAK,IAC5C,cAAC,IAAD,CAAOF,KAAK,oBAAoBC,UAAWjH,EAAakH,OAAK,IAC7D,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAWpG,EAAaqG,OAAK,IAClD,cAAC,IAAD,CAAOF,KAAK,iBAAiBC,UAAWrD,EAASsD,OAAK,IACtD,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWrF,EAAUsF,OAAK,IAClD,cAAC,IAAD,CAAOF,KAAK,qBAAqBC,UAAWzI,EAAc0I,OAAK,IAC/D,cAAC,IAAD,CAAOF,KAAK,YAAYC,UAAWpK,EAAUqK,OAAK,IAClD,cAAC,IAAD,CAAOF,KAAK,SAASC,UAAW5I,EAAO6I,OAAK,IAC5C,cAAC,IAAD,CAAOF,KAAK,UAAUC,UAAW1I,EAAQ2I,OAAK,IAC9C,cAAC,IAAD,CAAOF,KAAK,WAAWC,UAAWlI,EAAamI,OAAK,IACpD,cAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAW5H,EAAgB6H,OAAK,IAC/D,cAAC,IAAD,CAAOF,KAAK,kBAAkBC,UAAWhD,EAAeiD,OAAK,IAC7D,cAAC,IAAD,CAAOF,KAAK,sBAAsBC,UAAW9C,EAAsB+C,OAAK,IACxE,cAAC,IAAD,CAAOF,KAAK,eAAeC,UAAW3C,EAAY4C,OAAK,IACvD,cAAC,IAAD,CAAOF,KAAK,eAAeC,UAAW1C,EAAiB2C,OAAK,IAC5D,cAAC,IAAD,CAAOF,KAAK,0BAA0BC,UAAWxC,EAAkByC,OAAK,IACxE,cAAC,IAAD,CAAOF,KAAK,qBAAqBC,UAAWlC,EAAiBmC,OAAK,IAClE,cAAC,IAAD,CAAOF,KAAK,uBAAuBC,UAAWnC,EAAeoC,OAAK,IAClE,cAAC,IAAD,CAAOF,KAAK,8BAA8BC,UAAW/B,EAAiBgC,OAAK,IAC3E,cAAC,IAAD,CAAOF,KAAK,yBAAyBC,UAAWjC,EAAiBkC,OAAK,IACtE,cAAC,IAAD,CAAOF,KAAK,yBAAyBC,UAAWZ,EAAqBa,OAAK,IAC1E,cAAC,IAAD,CAAOF,KAAK,2BAA2BC,UAAWE,EAAmBD,OAAK,IAC1E,cAAC,IAAD,CAAOF,KAAK,mBAAmBC,UAAWX,EAAmBY,OAAK,IAClE,cAAC,IAAD,CAAOF,KAAK,2BAA2BC,UAAWR,EAAoBS,OAAK,IAC3E,cAAC,IAAD,CAAOF,KAAK,IAAIC,UAAWrK,eC3EvCwK,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJvE,SAASC,eAAe,SAM1BzM,M","file":"static/js/main.2228e56f.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {createContext} from 'react';\r\n\r\nconst UserContext = createContext({\r\n    userData: {},\r\n    setUserData: (data) => {}\r\n});\r\n\r\nexport default UserContext;","import axios from 'axios';\r\n\r\n\r\nconst instance = axios.create({\r\n    baseURL: process.env.REACT_APP_BACKEND_HOST,\r\n})\r\n\r\nexport default instance;","import {Link, useHistory} from 'react-router-dom';\r\nimport UserContext from '../context/UserContext';\r\nimport {useState, useContext} from 'react';\r\nimport apiInstance from '../utils/api';\r\nimport {FiAlignJustify, FiX} from 'react-icons/fi';\r\nimport './header.css'\r\n\r\nconst Header = () => {\r\n\r\n    const {userData, reloadUserData} = useContext(UserContext);\r\n    const [navbarToggled, setNavbarToggled] = useState(false);\r\n\r\n    const history = useHistory();\r\n\r\n    const logout = async () => {\r\n        const url = \"auth/logout/\"\r\n        await apiInstance.post(url, {}, {withCredentials: true})\r\n        .then(response => {\r\n            reloadUserData();\r\n            history.push(\"/logout\");\r\n        })\r\n    };\r\n\r\n    return (\r\n    <div className=\"nav-wrapper\">\r\n        <nav className=\"navbar\">\r\n            <Link to=\"/\" className=\"logo\" onClick={() => setNavbarToggled(false)}><div>FloppShop</div></Link>\r\n            <ul className={`nav-links${navbarToggled ? \"\" : \" not-displayed\"}`}>\r\n                {userData.is_staff && <Link to=\"/admin-panel\" className=\"nav-item\" onClick={() => setNavbarToggled(false)}><li>Admin panel</li></Link>}\r\n                {userData.pk && <Link to=\"/order-history\" className=\"nav-item\" onClick={() => setNavbarToggled(false)}><li>History</li></Link>}\r\n                {userData.pk && <Link to=\"/order\" className=\"nav-item\" onClick={() => setNavbarToggled(false)}><li>Order</li></Link>}\r\n                {userData.pk && <Link to=\"/profile\" className=\"nav-item\" onClick={() => setNavbarToggled(false)}><li>Profile</li></Link>}\r\n                {userData.pk && <Link to=\"/change-password\" className=\"nav-item\" onClick={() => setNavbarToggled(false)}><li>Change password</li></Link>}\r\n                <Link to=\"/register\" className=\"nav-item\" onClick={() => setNavbarToggled(false)}><li>Register</li></Link>\r\n                {!userData.pk ? <Link to=\"/login\" className=\"nav-item\" onClick={() => setNavbarToggled(false)}><li>Log in</li></Link> : <div className=\"nav-item\" onClick={logout}>Logout</div>}\r\n            </ul>\r\n            <div className=\"nav-button\" onClick={() => setNavbarToggled(!navbarToggled)}>{navbarToggled ? <FiX /> : <FiAlignJustify />}</div>\r\n        </nav>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Header;","import {Link} from 'react-router-dom';\r\n\r\nconst ItemList = ({items}) => {\r\n\r\n    return (\r\n        <div className=\"item-list\">\r\n            {items.length ? items.map((item, index) => (\r\n                <Link to={`/item-details/${item.id}`}><div className=\"item\" key={index}>\r\n                    <img src={item.images.length > 0 ? item.images[0].url : \"https://i.stack.imgur.com/y9DpT.jpg\"} alt=\"\" className=\"item-image\"/>\r\n                    <div className=\"item-info\" key={index}>\r\n                        <div className=\"item-name\">{item.name}</div>\r\n                        <div className=\"item-quantity\">In-stock: {item.quantity}</div>\r\n                        <div className=\"item-price-container\">\r\n                            {item.is_discount && <div className=\"item-old-price\">{item.old_price}zł</div>}\r\n                            <div className={item.is_discount ? \"item-discount-price\" : \"item-price\"}>{item.price}zł</div>\r\n                            {item.is_available && item.quantity > 0 ? <div className=\"item-is-available\">Available</div> : <div className=\"item-not-available\">Not available</div>}\r\n                        </div>\r\n                    </div>\r\n                </div></Link>\r\n            )) : <div className=\"item-error\">No items found</div>}\r\n        </div>\r\n    );\r\n};\r\nexport default ItemList;","import {useState, useEffect} from 'react';\r\nimport apiInstance from '../../utils/api';\r\nimport ItemList from './ItemList';\r\nimport './items.css';\r\nimport {FiChevronRight, FiChevronLeft} from 'react-icons/fi';\r\n\r\nconst FilterForm = () => {\r\n\r\n    const [search, setSearch] = useState({\r\n        text: \"\",\r\n        minPrice: 0,\r\n        maxPrice: 0,\r\n        orderBy: \"\"\r\n    });\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [maxPage, setMaxPage] = useState(1);\r\n    const [items, setItems] = useState([]);\r\n    const [filterToggled, setFilterToggled] = useState(false);\r\n\r\n    const changeText = e => {\r\n        setSearch({...search, text: e.target.value});\r\n    };\r\n\r\n    const changeMinPrice = e => {\r\n        setSearch({...search, minPrice: e.target.value});\r\n    };\r\n\r\n    const changeMaxPrice = e => {\r\n        setSearch({...search, maxPrice: e.target.value});\r\n    };\r\n\r\n    const changePage = number => {\r\n        if (number > 0 && number <= maxPage) {\r\n            setPage(Number.parseInt(number));\r\n        } else {\r\n            setPage(1);\r\n        }\r\n    };\r\n\r\n    const getItems = () => {\r\n        const url = `shop/items/?limit=10&offset=${(page-1)*10}`;\r\n        let params = {\r\n            search: search.text,\r\n            min_price: search.minPrice,\r\n            max_price: search.maxPrice,\r\n            order_by: search.orderBy\r\n        };\r\n        apiInstance.get(url, {params})\r\n        .then(response => {\r\n            setItems(response.data.results);\r\n            setMaxPage(Math.floor((response.data.count - 1) / 10) + 1);\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        getItems();\r\n    };\r\n\r\n    useEffect(() => {\r\n        getItems();\r\n    }, [page]);\r\n\r\n    return (\r\n        <>\r\n        <div className={`filter${filterToggled ? \"\" : \" not-displayed\"}`}>\r\n            <form className=\"filter-form\" onSubmit={handleSubmit}>\r\n                <div>\r\n                    <h4>Filter by</h4>\r\n                    <div>\r\n                        <label htmlFor=\"searchText\">Search by text:</label>\r\n                        <input id=\"searchText\" className=\"filter-form-input\" type=\"text\" maxLength=\"100\" size=\"25\" autoComplete=\"off\" value={search.text} onChange={changeText}/>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"min-price\">Price:</label>\r\n                        <input id=\"min-price\" className=\"filter-form-input filter-form-number\" type=\"number\" size=\"2\" min=\"0\" value={search.minPrice} onChange={(changeMinPrice)}/>-\r\n                        <input id=\"max-price\" className=\"filter-form-input filter-form-number\" type=\"number\" size=\"2\" min=\"0\" value={search.maxPrice} onChange={changeMaxPrice}/>\r\n                    </div>\r\n                </div>\r\n                <input className=\"filter-form-submit\" type=\"submit\" value=\"Filter\" onClick={() => setFilterToggled(false)}/>\r\n                <div>\r\n                    <h4>Order by</h4>\r\n                    <label>Price:</label>\r\n                    <div>\r\n                        <input type=\"radio\" className=\"filter-form-radio\" name=\"price\" id=\"price1\" value=\"+\" onChange={e => setSearch({...search, orderBy: e.target.value})}/>\r\n                        <label htmlFor=\"price1\">Ascending</label>\r\n                        <input type=\"radio\" className=\"filter-form-radio\" name=\"price\" id=\"price2\" value=\"-\" onChange={e => setSearch({...search, orderBy: e.target.value})}/>\r\n                        <label htmlFor=\"price2\">Descending</label> \r\n                    </div>\r\n                </div>\r\n                <div className=\"not-displayed\">\r\n                    <div>\r\n                    <h3>Page: <input type=\"number\" className=\"filter-form-input filter-form-number\" value={page} onFocus={e => e.target.select()} onBlur={e => changePage(e.target.value)}/> of {maxPage}</h3>\r\n                    </div>\r\n                    <div>\r\n                        {page !== 1 && <span className=\"blue-button\" onClick={() => changePage(page-1)}>&lt;</span>}\r\n                        {page !== maxPage && <span className=\"blue-button\" onClick={() => changePage(page+1)}>&gt;</span>}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div className=\"filter-arrow\" onClick={() => setFilterToggled(!filterToggled)}>{filterToggled ? <FiChevronLeft /> : <FiChevronRight />}</div>\r\n        <div className=\"pages\">\r\n                <span className={`blue-button${page !== 1 ? \"\" : \" hidden\"}`} onClick={() => changePage(page-1)}>&lt;</span>\r\n                <h4><input type=\"number\" className=\"filter-form-input page-input\" value={page} onFocus={e => e.target.select()} onChange={e => changePage(e.target.value)}/> of {maxPage}</h4>\r\n                <span className={`blue-button${page !== maxPage ? \"\" : \" hidden\"}`} onClick={() => changePage(page+1)}>&gt;</span>\r\n        </div>\r\n        <ItemList items={items}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default FilterForm;","const NotFound = () => {\r\n    return (\r\n        <div className=\"main-text\">\r\n            <div>\r\n                <h2>Page not found!</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NotFound;","import apiInstance from '../../utils/api';\r\nimport {useState} from 'react';\r\n\r\nconst Register = () => {\r\n\r\n    const [dateInputType, setDateInputType] = useState(\"text\");\r\n    const [formState, setFormState] = useState({\r\n        email: \"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        dateOfBirth: \"\",\r\n        password1: \"\",\r\n        password2: \"\",\r\n        responseOk: false,\r\n        responseLoading: false\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        setFormState({...formState, responseOk: false, responseLoading: true})\r\n        setErrors({})\r\n        const url = \"auth/registration/\";\r\n        apiInstance.post(url, {\r\n            email: formState.email,\r\n            first_name: formState.firstName,\r\n            last_name: formState.lastName,\r\n            phone: formState.phone,\r\n            date_of_birth: formState.dateOfBirth,\r\n            password1: formState.password1,\r\n            password2: formState.password2,\r\n        })\r\n        .then(response => {\r\n            setFormState({...formState, responseOk: true, responseLoading: false});\r\n            setErrors({});\r\n        })\r\n        .catch(error => {\r\n            setFormState({...formState, responseOk: false, responseLoading: false});\r\n            setErrors(error.response.data);\r\n        });\r\n    };\r\n\r\n\r\n    return (\r\n    <div className=\"scrollable-page\">\r\n        <div className=\"form-container\">\r\n            <form className=\"form\" onSubmit={handleSubmit}>\r\n                <h1>Registration</h1>\r\n                {formState.responseOk ? <div className=\"form-success\">Verification e-mail sent</div> : null}\r\n                {formState.responseLoading ? <div className=\"form-loading\">Sending...</div> : null}\r\n                <div className=\"form-field\">\r\n                    <input type=\"email\" className=\"form-input\" id=\"email\" value={formState.email} placeholder=\"E-mail\" onChange={e => setFormState({...formState, email: e.target.value})}/>\r\n                    {errors.email ? errors.email.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <input type=\"text\" className=\"form-input\" value={formState.firstName} placeholder=\"First name\" onChange={e => setFormState({...formState, firstName: e.target.value})}/>\r\n                    {errors.first_name ? errors.first_name.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <input type=\"text\" className=\"form-input\" value={formState.lastName} placeholder=\"Last name\" onChange={e => setFormState({...formState, lastName: e.target.value})}/>\r\n                    {errors.last_name ? errors.last_name.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <input type=\"text\" className=\"form-input\" value={formState.phone} placeholder=\"Phone number\" onChange={e => setFormState({...formState, phone: e.target.value})}/>\r\n                    {errors.phone ? errors.phone.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <input type={dateInputType}\r\n                    className=\"form-input\"\r\n                    value={formState.dateOfBirth}\r\n                    placeholder=\"Date of birth\"\r\n                    onFocus={() => setDateInputType(\"date\")}\r\n                        onBlur={() => setDateInputType(\"text\")}\r\n                        onChange={e => setFormState({...formState, dateOfBirth: e.target.value})}/>\r\n                    {errors.date_of_birth ? errors.date_of_birth.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <input type=\"password\" className=\"form-input\" value={formState.password1} placeholder=\"Password\" onChange={e => setFormState({...formState, password1: e.target.value})}/>\r\n                    {errors.password1 ? errors.password1.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>) : null}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <input type=\"password\" className=\"form-input\" value={formState.password2} placeholder=\"Password again\" onChange={e => setFormState({...formState, password2: e.target.value})}/>\r\n                    {errors.password2 ? errors.password2.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>) : null}\r\n                    {errors.non_field_errors ? errors.non_field_errors.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>) : null}\r\n                </div>\r\n                <input className=\"form-button form-input\" type=\"submit\" value=\"Register\"/>\r\n            </form>\r\n        </div>\r\n    </div>\r\n    );\r\n};\r\n\r\nexport default Register;","import {useState, useContext} from 'react';\r\nimport {useHistory, Link} from 'react-router-dom';\r\nimport UserContext from \"../../context/UserContext\";\r\nimport apiInstance from '../../utils/api';\r\n\r\n\r\nconst Login = () => {\r\n\r\n    const [formState, setFormState] = useState({\r\n        email: \"\",\r\n        password: \"\"\r\n    });\r\n\r\n    const [errors, setErrors] = useState({});\r\n    const history = useHistory();\r\n    const {reloadUserData} = useContext(UserContext);\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        const url = \"auth/login/\";\r\n        await apiInstance.post(url, {email: formState.email, password: formState.password}, {withCredentials: true})\r\n        .then(response => {\r\n            setErrors({});\r\n            reloadUserData();\r\n            history.push(\"/\");\r\n        })\r\n        .catch(error => {\r\n            setErrors(error.response.data);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form className=\"small-form\" onSubmit={handleSubmit}>\r\n                <h1>Login</h1>\r\n                <div className=\"form-field\">\r\n                    <input type=\"email\" className=\"form-input\" placeholder=\"E-mail\" value={formState.email} onChange={e => setFormState({...formState, email: e.target.value})}/>\r\n                    {errors.email && errors.email.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <input type=\"password\" className=\"form-input\" placeholder=\"Password\" value={formState.password} onChange={e => setFormState({...formState, password: e.target.value})}/>\r\n                    {errors.password && errors.password.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                    {errors.non_field_errors && errors.non_field_errors.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                </div>\r\n                <Link to=\"reset-password\"><div className=\"form-link\">Forgot password?</div></Link>\r\n                <input type=\"submit\" className=\"form-button form-input\" value=\"Log in\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;","const Logout = () => {\r\n    return (\r\n        <div className=\"main-text\">\r\n            <div>\r\n                <h2>Succesfully logged out</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Logout;","import {useState, useEffect} from 'react';\r\nimport {useParams} from 'react-router-dom';\r\nimport apiInstance from '../../utils/api';\r\n\r\nconst ConfirmEmail = () => {\r\n\r\n    const [isConfirmed, setIsConfirmed] = useState(false);\r\n    const { key } = useParams();\r\n\r\n    useEffect(() => {\r\n        const url = \"auth/registration/verify-email/\";\r\n        apiInstance.post(url, {key: key})\r\n        .then(response => {\r\n            console.log(response.data);\r\n            setIsConfirmed(true);\r\n        })\r\n        .catch(error => {\r\n            console.log(error.response.data);\r\n            setIsConfirmed(false);\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <h1 className=\"main-text\">{isConfirmed ? \"E-mail confirmed succesfully\" : \"Activation link invalid\"}</h1>\r\n    );\r\n};\r\n\r\nexport default ConfirmEmail;","import {useState, useEffect, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport apiInstance from '../../utils/api';\r\n\r\nconst UserProfile = () => {\r\n\r\n    const [formData, setFormData] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const [responseOk, setResponseOk] = useState(false);\r\n    const [dateInputType, setDateInputType] = useState(\"text\");\r\n    const {userData, reloadUserData} = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        apiInstance.get(\"auth/user/\", {withCredentials: true})\r\n        .then(response => {\r\n            setFormData(response.data);\r\n        })\r\n        .catch(error => {\r\n            reloadUserData();\r\n            history.push(\"/login\");\r\n        });\r\n    }, []);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        reloadUserData();\r\n        const url = \"auth/user/\";\r\n        apiInstance.put(url, formData, {withCredentials: true})\r\n        .then(response => {\r\n            setResponseOk(true);\r\n            setErrors({});\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            }\r\n            setResponseOk(false);\r\n            setErrors(error.response.data);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"scrollable-page\">\r\n            <div className=\"form-container\">\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <h1>Profile info</h1>\r\n                    {responseOk && <div className=\"form-success\">Profile saved</div>}\r\n                    <div className=\"form-field\">\r\n                        <div className=\"form-input\">Id: {formData.pk}</div>\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        <div className=\"form-input\">E-mail: {formData.email}</div>\r\n                    </div>\r\n                    {userData.is_staff && <div className=\"form-field\">\r\n                        <div className=\"form-input\">Is Admin: True</div>\r\n                    </div>}\r\n                    <div className=\"form-field\">\r\n                        First name: <input type=\"text\" className=\"form-input\" value={formData.first_name} placeholder=\"First name\" onChange={e => setFormData({...formData, first_name: e.target.value})}/>\r\n                        {errors.first_name && errors.first_name.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>) }\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        Last name: <input type=\"text\" className=\"form-input\" value={formData.last_name} placeholder=\"Last name\" onChange={e => setFormData({...formData, last_name: e.target.value})}/>\r\n                        {errors.last_name && errors.last_name.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        Phone: <input type=\"text\" className=\"form-input\" value={formData.phone} placeholder=\"Phone number\" onChange={e => setFormData({...formData, phone: e.target.value})}/>\r\n                        {errors.phone && errors.phone.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        Date of birth: <input type={dateInputType}\r\n                        className=\"form-input\"\r\n                        value={formData.date_of_birth}\r\n                        placeholder=\"Date of birth\"\r\n                        onFocus={() => setDateInputType(\"date\")}\r\n                            onBlur={() => setDateInputType(\"text\")}\r\n                            onChange={e => setFormData({...formData, date_of_birth: e.target.value})}/>\r\n                        {errors.date_of_birth && errors.date_of_birth.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        {errors.non_field_errors && errors.non_field_errors.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                    </div>\r\n                    <input className=\"form-button form-input\" type=\"submit\" value=\"Save profile\"/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UserProfile;","import {useState, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport apiInstance from '../../utils/api';\r\n\r\nconst ChangePassword = () => {\r\n\r\n    const [oldPassword, setOldPassword] = useState(\"\");\r\n    const [newPassword1, setNewPassword1] = useState(\"\");\r\n    const [newPassword2, setNewPassword2] = useState(\"\");\r\n    const [responseOk, setResponseOk] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const {reloadUserData} = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const requestData = {\r\n            old_password: oldPassword,\r\n            new_password1: newPassword1,\r\n            new_password2: newPassword2\r\n        };\r\n        apiInstance.post(\"auth/password/change/\", requestData, {withCredentials: true})\r\n        .then(response => {\r\n            setResponseOk(true);\r\n            setErrors({});\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            }\r\n            setErrors(error.response.data);\r\n            setResponseOk(false);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form className=\"small-form\" onSubmit={handleSubmit}>\r\n                <h1>Change password</h1>\r\n                {responseOk && <div className=\"form-success\">Password changed</div>}\r\n                <div className=\"form-field\">\r\n                    <input type=\"password\" className=\"form-input\" placeholder=\"Old password\" value={oldPassword} onChange={e => setOldPassword(e.target.value)}/>\r\n                    {errors.old_password && errors.old_password.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <input type=\"password\" className=\"form-input\" placeholder=\"New Password\" value={newPassword1} onChange={e => setNewPassword1(e.target.value)}/>\r\n                    {errors.new_password1 && errors.new_password1.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <input type=\"password\" className=\"form-input\" placeholder=\"New password again\" value={newPassword2} onChange={e => setNewPassword2(e.target.value)}/>\r\n                    {errors.new_password2 && errors.new_password2.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                    {errors.non_field_errors && errors.non_field_errors.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                </div>\r\n                <input type=\"submit\" className=\"form-button form-input\" value=\"Change password\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n};  \r\n\r\nexport default ChangePassword;","import apiInstance from '../../utils/api';\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport './items.css';\r\n\r\nconst ItemDetails = () => {\r\n\r\n    const [item, setItem] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        quantity: \"\",\r\n        price: 0,\r\n        images: []\r\n    });\r\n    const [selectedImage, setSelectedImage] = useState(\"https://i.stack.imgur.com/y9DpT.jpg\")\r\n    const {reloadUserData} = useContext(UserContext);\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [response, setResponse] = useState(false);\r\n    const [error, setError] = useState({});\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const url = `shop/items/${id}/`;\r\n        apiInstance.get(url)\r\n        .then(response => {\r\n            setItem(response.data);\r\n            if (response.data.images.length > 0) {\r\n                setSelectedImage(response.data.images[0].url);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            history.push(\"/not-found\");\r\n        });\r\n    }, []);\r\n\r\n    const changeQuantity = e => {\r\n        if (e.target.value > 0 && e.target.value <= item.quantity) {\r\n            setQuantity(Number.parseInt(e.target.value));\r\n        } else if (e.target.value > item.quantity) {\r\n            setQuantity(item.quantity);\r\n        } else {\r\n            setQuantity(1);\r\n        }\r\n    };\r\n\r\n    const increaseQuantity = () => {\r\n        if (quantity < item.quantity) {\r\n            setQuantity(quantity+1);\r\n        }\r\n    };\r\n\r\n    const decreaseQuantity = () => {\r\n        if (quantity > 1) {\r\n            setQuantity(quantity-1);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        reloadUserData();\r\n        const url = `shop/items/${id}/`;\r\n        apiInstance.post(url, {}, {withCredentials: true, params: {quantity}})\r\n        .then(response => {\r\n            setResponse(response.data);\r\n            setError({});\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 401) {\r\n                history.push(\"/login\");\r\n            }\r\n            setResponse({});\r\n            setError(error.response.data);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"scrollable-page\">\r\n            <div className=\"item-details\">\r\n                <div className=\"item-details-images\">\r\n                    <img src={selectedImage} alt=\"item\" className=\"item-details-image\"/>\r\n                    <div className=\"item-details-small-images\">\r\n                        {item.images.length > 1 && item.images.map((image, index) => (\r\n                            <img src={image.url} alt=\"item-small\" key={index} className=\"item-details-small-image\"\r\n                            onClick={e => setSelectedImage(e.target.src)}/>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                <div className=\"item-details-line not-displayed\"></div>\r\n                <div className=\"item-details-info\">\r\n                    <div className=\"item-details-name\">{item.name}</div>\r\n                    <div className=\"item-details-description\">{item.description}</div>\r\n                    <div className=\"item-details-bottom\">\r\n                        <div className=\"item-quantity\">In-stock: {item.quantity}</div>\r\n                        {item.is_discount && <span className=\"item-old-price\">{item.old_price}zl</span>}\r\n                        <span className={item.is_discount ? \"item-discount-price\" : \"item-price\"}>{item.price}zl</span>\r\n                        {item.is_discount && <h4 className=\"on-discount\">ON DISCOUNT!</h4>}\r\n                    </div>\r\n                    {item.is_available && item.quantity > 0 ? <form className=\"quantity-form\" onSubmit={handleSubmit}>\r\n                        <div className=\"quantity-data\">\r\n                            <div className=\"item-quantity\">Quantity: </div>\r\n                            <div className=\"quantity-buttons\">\r\n                                <div onClick={decreaseQuantity} className=\"sign-box\">-</div>\r\n                                <input type=\"number\" className=\"quantity-input\" value={quantity} onChange={changeQuantity}/>\r\n                                <div onClick={increaseQuantity} className=\"sign-box\">+</div>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Add to cart\" className=\"add-to-cart\"/>\r\n                        {response.detail && <div className=\"quantity-success\">{response.detail}</div>}\r\n                        {error.detail && <div className=\"quantity-fail\">{error.detail}</div>}\r\n                    </form> : <div className=\"add-to-cart-unavailable\">Item unavailable</div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemDetails;","const OrderInfo = ({order}) => {\r\n    return (\r\n        <>\r\n        {order.id ? <div className=\"gray-container\">\r\n                <h1>Active order</h1>\r\n                <div className=\"data-container\">\r\n                    <div className=\"data-row\"><span>Order ID: </span><span>{order.id}</span></div>\r\n                    <div className=\"data-row\"><span>Quantity: </span><span>{order.quantity}</span></div>\r\n                    <div className=\"data-row\"><span>Total price: </span><span>{order.total_price}zł</span></div>\r\n                </div>\r\n            </div> : <div className=\"gray-container\"><h1>No active order</h1></div>}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderInfo;","import apiInstance from '../../utils/api';\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport {useHistory, Link} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport OrderInfo from './OrderInfo';\r\nimport './order.css';\r\n\r\nconst ActiveOrder = () => {\r\n\r\n    const [order, setOrder] = useState({\r\n        id: \"\",\r\n        carts: [],\r\n        address: \"\",\r\n        method: {},\r\n        total_price: \"\",\r\n        is_finished: false,\r\n        is_paid: false,\r\n        date_created: \"\",\r\n        date_finished: \"\",\r\n        date_paid: \"\",\r\n        quantity: 0\r\n    });\r\n    const [error, setError] = useState({});\r\n    const history = useHistory();\r\n    const {reloadUserData} = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        apiInstance.get(\"shop/order/\", {withCredentials: true})\r\n        .then(response => {\r\n            setOrder(response.data);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            }\r\n            setOrder(error.response.data);\r\n        });\r\n    }, []);\r\n\r\n    const changeQuantity = (id, quantity) => {\r\n        const url = `shop/items/${id}/`;\r\n        apiInstance.post(url, {}, {withCredentials: true, params: {quantity}})\r\n        .then(response => {\r\n            if (response.status === 204) {\r\n                setOrder({});\r\n            } else {\r\n                apiInstance.get(\"shop/order/\", {withCredentials: true})\r\n            .then(response => {\r\n                setError({});\r\n                setOrder(response.data);\r\n            });\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            }\r\n            setError(error.response.data);\r\n        });\r\n    };\r\n\r\n    const compareCarts = (cart1, cart2) => {\r\n        if (cart1.item.name < cart2.item.name) {\r\n            return -1;\r\n        } else if (cart1.item.name > cart2.item.name) {\r\n            return 1;\r\n        } else {\r\n            return 0;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"scrollable-page\">\r\n            <OrderInfo order={order} />\r\n            {order.id ? <div className=\"gray-container\">\r\n                <h1>Items</h1>\r\n                {order.carts.sort(compareCarts).map((cart, index) => (\r\n                    <div className=\"order-item\" key={index}>\r\n                        <img src={cart.item.images.length ? cart.item.images[0].url : \"https://i.stack.imgur.com/y9DpT.jpg\"} alt=\"\" className=\"item-image\"></img>\r\n                        <h2 className=\"item-header\">{cart.item.name}</h2>\r\n                        <div className=\"item-description\">{cart.item.description}</div>\r\n                        <div>\r\n                            {cart.item.is_discount && <div className=\"item-old-price\">{cart.item.old_price}zł</div>}\r\n                            <div className={cart.item.is_discount ? \"item-discount-price\" : \"item-price\"}>{cart.item.price}zł</div>\r\n                        </div>\r\n                        <h3>Total price: {cart.total_price}zł</h3>\r\n                        <form className=\"quantity-form\">\r\n                            <div>\r\n                                <div className=\"quantity-data\">\r\n                                    <div className=\"item-quantity\">Quantity: </div>\r\n                                    <div className=\"quantity-buttons\">\r\n                                        <div className=\"sign-box\" onClick={() => changeQuantity(cart.item.id, -1)}>-</div>\r\n                                        <span className=\"cart-quantity\">{cart.quantity}</span>\r\n                                        <div className=\"sign-box\" onClick={() => changeQuantity(cart.item.id, 1)}>+</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                ))}\r\n                {error.detail && <div className=\"form-error\">{error.detail}</div>}\r\n                <div className=\"checkout\"><Link to=\"/checkout\"><div className=\"checkout-button\">Go to checkout &gt;</div></Link></div>\r\n            </div> : null}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ActiveOrder;","import OrderInfo from './OrderInfo';\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport apiInstance from '../../utils/api';\r\n\r\n\r\nconst Checkout = () => {\r\n    const [formData, setFormData] = useState({\r\n        street: \"\",\r\n        number: \"\",\r\n        state: \"\",\r\n        post_code: \"\",\r\n        city: \"\",\r\n        method: \"\"\r\n    });\r\n    const [order, setOrder] = useState({\r\n        id: \"\",\r\n        carts: [],\r\n        address: \"\",\r\n        method: {},\r\n        total_price: \"\",\r\n        is_finished: false,\r\n        is_paid: false,\r\n        date_created: \"\",\r\n        date_finished: \"\",\r\n        date_paid: \"\",\r\n        quantity: 0\r\n    });\r\n    const [methods, setMethods] = useState([]);\r\n    const [payUUri, setPayUUri] = useState(\"\");\r\n    const [errors, setErrors] = useState({});\r\n    const [select, setSelect] = useState();\r\n    const [readOnly, setReadOnly] = useState(false);\r\n    const {userData, reloadUserData} = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    const asyncInitEasyPack = () => {\r\n        // eslint-disable-next-line no-undef\r\n        easyPack.init({});\r\n        // eslint-disable-next-line no-undef\r\n        easyPack.dropdownWidget('easypack-map', ({address_details}) => {\r\n            setFormData({\r\n                street: address_details.street,\r\n                number: address_details.building_number,\r\n                state: address_details.province,\r\n                post_code: address_details.post_code,\r\n                city: address_details.city\r\n            });\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        apiInstance.get(\"shop/order/\", {withCredentials: true})\r\n        .then(response => {\r\n            setOrder(response.data);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            }\r\n            history.push(\"/not-found\");\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        apiInstance.get(\"shop/methods/\")\r\n        .then(response => {\r\n            setMethods(response.data);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        asyncInitEasyPack();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const easyPackDiv = document.getElementById(\"easypack-map\");\r\n        if (select === \"InPost\") {\r\n            easyPackDiv.classList.remove(\"hidden\");\r\n            setReadOnly(true);\r\n            setFormData({\r\n                street: \"\",\r\n                number: \"\",\r\n                state: \"\",\r\n                post_code: \"\",\r\n                city: \"\",\r\n                method: \"\"\r\n            });\r\n        } else {\r\n            easyPackDiv.classList.add(\"hidden\");\r\n            setReadOnly(false);\r\n        }\r\n    }, [select]);\r\n\r\n    const submitOrder = () => {\r\n        apiInstance.post(\"shop/order/\", {...formData, method: select}, {withCredentials: true})\r\n        .then(response => {\r\n            apiInstance.post(`shop/payment/${order.id}/`, {}, {withCredentials: true})\r\n            .then(response => {\r\n                console.log(response.data);\r\n                setPayUUri(response.data.redirectUri);\r\n            })\r\n            .catch(error => {\r\n                console.log(error.response.data);\r\n            })\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            } else if (error.response.status === 404) {\r\n                history.push(\"/order\");\r\n            }\r\n            setErrors(error.response.data);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"scrollable-page\">\r\n        <OrderInfo order={order} />\r\n        <div>\r\n            <div className=\"shipping\">\r\n                    <form className=\"shipping-form\">\r\n                        <h1>Address:</h1>\r\n                        <input type=\"text\" placeholder=\"Street\" className=\"form-input\" readOnly={readOnly} value={formData.street} onChange={e => setFormData({...formData, street: e.target.value})}/>\r\n                        {errors.street && <div className=\"form-error\">{errors.street[0]}</div>}\r\n                        <input type=\"text\" placeholder=\"Number\" className=\"form-input\" readOnly={readOnly} value={formData.number} onChange={e => setFormData({...formData, number: e.target.value})}/>\r\n                        {errors.number && <div className=\"form-error\">{errors.number[0]}</div>}\r\n                        <input type=\"text\" placeholder=\"Post Code\" className=\"form-input\" readOnly={readOnly} value={formData.post_code} onChange={e => setFormData({...formData, post_code: e.target.value})}/>\r\n                        {errors.post_code && <div className=\"form-error\">{errors.post_code[0]}</div>}\r\n                        <input type=\"text\" placeholder=\"State\" className=\"form-input\" readOnly={readOnly} value={formData.state} onChange={e => setFormData({...formData, state: e.target.value})}/>\r\n                        {errors.state && <div className=\"form-error\">{errors.state[0]}</div>}\r\n                        <input type=\"text\" placeholder=\"City\" className=\"form-input\" readOnly={readOnly} value={formData.city} onChange={e => setFormData({...formData, city: e.target.value})}/>\r\n                        {errors.city && <div className=\"form-error\">{errors.city[0]}</div>}\r\n                    </form>\r\n                <div className=\"shipping-method\">\r\n                    <h1>Shipping method: </h1>\r\n                    <div className=\"inpost-dropdown\">\r\n                        <div id=\"easypack-map\"></div>\r\n                    </div>\r\n                    <select name=\"method\" id=\"method\" className=\"shipping-method-select\" value={select} onChange={e => setSelect(e.target.value)}>\r\n                        <option value={null} selected=\"true\" disabled>-</option>\r\n                        {methods.length && methods.map((method, index) => (\r\n                        <option value={method.name} key={index}>{method.name} - {method.price}zł</option>\r\n                        ))}\r\n                    </select>\r\n                    {!payUUri && <div className=\"checkout-button\" onClick={submitOrder}>Submit order</div>}\r\n                    {payUUri && <a href={payUUri} target=\"_blank\" rel=\"noreferrer\"><div className=\"order-details blue-button\">Redirect to payment</div></a>}\r\n                    {errors.detail && <div className=\"form-error\">Choose shipping method</div>}\r\n                </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Checkout;","\r\nconst OrderFinished = ({order, selectOrder}) => {\r\n    return (\r\n        <>\r\n        <div className=\"gray-container data-link\" onClick={() => selectOrder(order)}>\r\n            <div className=\"data-container\">\r\n                <div className=\"data-row\"><span>Order ID: </span><span>{order.id}</span></div>\r\n                <div className=\"data-row\"><span>Total price: </span><span>{order.total_price}zł</span></div>\r\n                <div className=\"data-row\"><span>Quantity: </span><span>{order.quantity}</span></div>\r\n                <div className=\"data-row\"><span>Date finished: </span><span>{order.date_finished}</span></div>\r\n                <div className=\"data-row\"><span>Shipping method: </span><span>{order.method.name}</span></div>\r\n                <div className=\"data-row\"><span>Shipping price: </span><span>{order.method.price}zł</span></div>\r\n                <div className=\"data-row\"><span>Status: </span><span>{order.is_paid ? \"Paid\" : \"Unpaid\"}</span></div>\r\n                {order.is_paid && <div className=\"data-row\"><span>Date paid: </span><span>{order.date_paid}</span></div>}\r\n            </div>\r\n        </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default OrderFinished;","\r\nconst HistoryDetails = ({order, selectOrder}) => {\r\n\r\n    return (\r\n        <>\r\n        <div className=\"gray-container\">\r\n            <div className=\"data-container\">\r\n                <div className=\"container\">\r\n                    <div className=\"blue-button go-back\" onClick={() => selectOrder({})}>Go back</div>\r\n                </div>\r\n                <div className=\"data-row\"><span>Order ID: </span><span>{order.id}</span></div>\r\n                <div className=\"data-row\"><span>Total price: </span><span>{order.total_price}zł</span></div>\r\n                <div className=\"data-row\"><span>Quantity: </span><span>{order.quantity}</span></div>\r\n                <div className=\"data-row\"><span>Date finished: </span><span>{order.date_finished}</span></div>\r\n                <div className=\"data-row\"><span>Shipping method: </span><span>{order.method.name}</span></div>\r\n                <div className=\"data-row\"><span>Shipping price: </span><span>{order.method.price}</span></div>\r\n                <div className=\"data-row\"><span>Status: </span><span>{order.is_paid ? \"Paid\" : \"Unpaid\"}</span></div>\r\n                {order.is_paid && <div className=\"data-row\"><span>Date paid: </span><span>{order.date_paid}</span></div>}\r\n            </div>\r\n        </div>\r\n        <div className=\"gray-container\">\r\n        {order.carts.map((cart, index) => (\r\n                    <div className=\"order-item\" key={index}>\r\n                        <img src={cart.item.images.length ? cart.item.images[0].url : \"https://i.stack.imgur.com/y9DpT.jpg\"} alt=\"\" className=\"item-image\"></img>\r\n                        <h2 className=\"item-header\">{cart.item.name}</h2>\r\n                        <div className=\"item-description\">{cart.item.description}</div>\r\n                        <div className=\"item-price\">{cart.item.price}zł</div>\r\n                        <h3>Total price: {cart.total_price}zł</h3>\r\n                        <form className=\"quantity-form\">\r\n                            <div>\r\n                                <div className=\"quantity-data\">\r\n                                    <div className=\"item-quantity\">Quantity: {cart.quantity}</div>\r\n                                </div>\r\n                            </div>\r\n                        </form>\r\n                    </div>\r\n                ))}\r\n        </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default HistoryDetails;","import apiInstance from '../../utils/api';\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport OrderFinished from './OrderFinished';\r\nimport HistoryDetails from './HistoryDetails';\r\nimport './order.css';\r\n\r\nconst History = () => {\r\n    const [selectedOrder, setSelectedOrder] = useState({});\r\n    const [orders, setOrders] = useState([]);\r\n    const {reloadUserData} = useContext(UserContext);\r\n    const [page, setPage] = useState(1);\r\n    const [maxPage, setMaxPage] = useState(1);\r\n    const history = useHistory();\r\n\r\n    const changePage = number => {\r\n        if (number > 0 && number <= maxPage) {\r\n            setPage(Number.parseInt(number));\r\n        } else {\r\n            setPage(1);\r\n        }\r\n    };\r\n\r\n    const getOrderHistory = () => {\r\n        apiInstance.get(`shop/order/?history&limit=10&offset=${(page-1)*10}`, {withCredentials: true})\r\n        .then(response => {\r\n            setOrders(response.data.results);\r\n            setMaxPage(Math.floor((response.data.count-1) / 10) + 1);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getOrderHistory();\r\n    }, [page]);\r\n\r\n    return (\r\n        <div className=\"scrollable-page\">\r\n            {!selectedOrder.id && <div className=\"gray-container\">\r\n                {orders.length > 0 && <><h1>Order history</h1>\r\n                <h3>Page: <input type=\"number\" className=\"filter-form-input page-input white\" value={page} onChange={e => changePage(e.target.value)}/> of {maxPage}</h3>\r\n                <div className=\"page-buttons\">\r\n                    {page !== 1 && <span className=\"blue-button\" onClick={() => changePage(page-1)}>&lt;</span>}\r\n                    {page !== maxPage && <span className=\"blue-button\" onClick={() => changePage(page+1)}>&gt;</span>}\r\n                </div>\r\n                </>}\r\n                {!orders.length > 0 && <h1>No orders</h1>}\r\n            </div>}\r\n            {orders.length > 0 && !selectedOrder.id && orders.map((order, index) => <OrderFinished order={order} key={index} selectOrder={setSelectedOrder}/>)}\r\n            {selectedOrder.id && <HistoryDetails order={selectedOrder} selectOrder={setSelectedOrder}/>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default History;","import {useState} from 'react';\r\nimport apiInstance from '../../utils/api';\r\n\r\nconst PasswordReset = () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [responseOk, setResponseOk] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        apiInstance.post(\"auth/password/reset/\", {email})\r\n        .then(response => {\r\n            setErrors({});\r\n            setResponseOk(true);\r\n        })\r\n        .catch(error => {\r\n            setResponseOk(false);\r\n            setErrors(error.response.data); \r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form className=\"small-form\" onSubmit={handleSubmit}>\r\n                <h1>Reset password</h1>\r\n                {responseOk && <div className=\"form-success\">Password reset e-mail sent</div>}\r\n                <div className=\"form-field\">\r\n                    <input type=\"email\" className=\"form-input\" placeholder=\"E-mail\" value={email} onChange={e => setEmail(e.target.value)}/>\r\n                    {errors.email && errors.email.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                    {errors.non_field_errors && errors.non_field_errors.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                </div>\r\n                <input type=\"submit\" className=\"form-button form-input\" value=\"Reset\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordReset;","import {useParams} from 'react-router-dom';\r\nimport {useState} from 'react';\r\nimport apiInstance from '../../utils/api';\r\n\r\nconst PasswordResetConfirm = () => {\r\n    const [responseOk, setResponseOk] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const [newPassword1, setNewPassword1] = useState(\"\");\r\n    const [newPassword2, setNewPassword2] = useState(\"\");\r\n    const { uid, token } = useParams();\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const url = \"auth/password/reset/confirm/\";\r\n        apiInstance.post(url, {uid, token, new_password1: newPassword1, new_password2: newPassword2})\r\n        .then(response => {\r\n            setResponseOk(true);\r\n            setErrors({});\r\n        })\r\n        .catch(error => {\r\n            setResponseOk(false);\r\n            setErrors(error.response.data);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form className=\"small-form\" onSubmit={handleSubmit}>\r\n                <h1>Set new password</h1>\r\n                {responseOk && <div className=\"form-success\">New password set</div>}\r\n                <div className=\"form-field\">\r\n                    <input type=\"password\" className=\"form-input\" placeholder=\"New password\" value={newPassword1} onChange={e => setNewPassword1(e.target.value)}/>\r\n                    {errors.new_password1 && errors.new_password1.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    <input type=\"password\" className=\"form-input\" placeholder=\"New password again\" value={newPassword2} onChange={e => setNewPassword2(e.target.value)}/>\r\n                    {errors.new_password2 && errors.new_password2.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                    {errors.non_field_errors && errors.non_field_errors.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                    {errors.token && errors.token.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                </div>\r\n                <input type=\"submit\" className=\"form-button form-input\" value=\"Set password\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PasswordResetConfirm;","import {useEffect, useContext} from 'react';\r\nimport {useHistory, Link} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport apiInstance from '../../utils/api';\r\nimport './admin.css';\r\n\r\nconst AdminPanel = () => {\r\n    const {reloadUserData} = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        apiInstance.get(\"auth/user/\", {withCredentials: true})\r\n        .then(response => {\r\n            if (!response.data.is_staff) {\r\n                reloadUserData();\r\n                history.push(\"/not-found\");\r\n            }\r\n        })\r\n        .catch(error => {\r\n            reloadUserData();\r\n            history.push(\"/login\");\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"scrollable-page\">\r\n            <div className=\"admin-panel\">\r\n                <h1>Items:</h1>\r\n                <div>\r\n                    <Link to=\"/admin-items\"><div className=\"blue-button\">View items</div></Link>\r\n                    <Link to=\"/admin-item-create\"><div className=\"blue-button\">Add item</div></Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"admin-panel\">\r\n                <h1>Shipping methods:</h1>\r\n                <div>\r\n                    <Link to=\"/admin-shippings\"><div className=\"blue-button\">View shipping methods</div></Link>\r\n                    <Link to=\"/admin-create-shipping\"><div className=\"blue-button\">Add shipping method</div></Link>\r\n                </div>\r\n            </div>\r\n            <div className=\"admin-panel\">\r\n                <h1>PayU notifications:</h1>\r\n                <Link to=\"/admin-notification-list\"><div className=\"blue-button\">View notifications</div></Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminPanel;","import {Link} from 'react-router-dom';\r\n\r\nconst ItemList = ({items}) => {\r\n\r\n    return (\r\n        <div className=\"item-list\">\r\n            {items.length ? items.map((item, index) => (\r\n                <Link to={`/admin-item-details/${item.id}`}><div className=\"item\" key={index}>\r\n                    <img src={item.images.length > 0 ? item.images[0].url : \"https://i.stack.imgur.com/y9DpT.jpg\"} alt=\"\" className=\"item-image\"/>\r\n                    <div className=\"item-info\" key={index}>\r\n                        <div className=\"item-name\">{item.name}</div>\r\n                        <div className=\"item-quantity\">In-stock: {item.quantity}</div>\r\n                        <div className=\"item-price-container\">\r\n                            {item.is_discount && <div className=\"item-old-price\">{item.old_price}zł</div>}\r\n                            <div className={item.is_discount ? \"item-discount-price\" : \"item-price\"}>{item.price}zł</div>\r\n                            {item.is_available && item.quantity > 0 ? <div className=\"item-is-available\">Available</div> : <div className=\"item-not-available\">Not available</div>}\r\n                        </div>\r\n                    </div>\r\n                </div></Link>\r\n            )) : <div className=\"item-error\">No items found</div>}\r\n        </div>\r\n    );\r\n};\r\nexport default ItemList;\r\n","import {useState, useEffect, useContext} from 'react';\r\nimport apiInstance from '../../utils/api';\r\nimport AdminItemList from './AdminItemList';\r\nimport {useHistory} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport {FiChevronLeft, FiChevronRight} from 'react-icons/fi';\r\nimport './admin.css';\r\n\r\n\r\nconst AdminFilterForm = () => {\r\n\r\n    const [search, setSearch] = useState({\r\n        text: \"\",\r\n        minPrice: 0,\r\n        maxPrice: 0,\r\n        orderBy: \"\"\r\n    });\r\n\r\n    const [page, setPage] = useState(1);\r\n    const [maxPage, setMaxPage] = useState(1);\r\n    const [items, setItems] = useState([]);\r\n    const [filterToggled, setFilterToggled] = useState(false);\r\n    const history = useHistory();\r\n    const {reloadUserData} = useContext(UserContext);\r\n\r\n    const changeText = e => {\r\n        setSearch({...search, text: e.target.value});\r\n    };\r\n\r\n    const changeMinPrice = e => {\r\n        setSearch({...search, minPrice: e.target.value});\r\n    };\r\n\r\n    const changeMaxPrice = e => {\r\n        setSearch({...search, maxPrice: e.target.value});\r\n    };\r\n\r\n    const changePage = number => {\r\n        if (number > 0 && number <= maxPage) {\r\n            setPage(Number.parseInt(number));\r\n        } else {\r\n            setPage(1);\r\n        }\r\n    };\r\n\r\n    const getItems = () => {\r\n        const url = `shop/admin/items/?limit=10&offset=${(page-1)*10}`;\r\n        let params = {\r\n            search: search.text,\r\n            min_price: search.minPrice,\r\n            max_price: search.maxPrice,\r\n            order_by: search.orderBy\r\n        };\r\n        apiInstance.get(url, {withCredentials: true, params: params})\r\n        .then(response => {\r\n            setItems(response.data.results);\r\n            setMaxPage(Math.floor((response.data.count - 1) / 10) + 1);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 403) {\r\n                reloadUserData();\r\n                history.push(\"/not-found\");\r\n            } \r\n            console.log(error.response);\r\n            console.log(error.status);\r\n        });\r\n    };\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault();\r\n        getItems();\r\n    };\r\n\r\n    useEffect(() => {\r\n        getItems();\r\n    }, [page]);\r\n\r\n    return (\r\n        <>\r\n        <div className={`filter${filterToggled ? \"\" : \" not-displayed\"}`}>\r\n            <form className=\"filter-form\" onSubmit={handleSubmit}>\r\n                <div>\r\n                    <h4>Filter by</h4>\r\n                    <div>\r\n                        <label htmlFor=\"searchText\">Search by text:</label>\r\n                        <input id=\"searchText\" className=\"filter-form-input\" type=\"text\" maxLength=\"100\" size=\"25\" autoComplete=\"off\" value={search.text} onChange={changeText}/>\r\n                    </div>\r\n                    <div>\r\n                        <label htmlFor=\"min-price\">Price:</label>\r\n                        <input id=\"min-price\" className=\"filter-form-input filter-form-number\" type=\"number\" size=\"2\" min=\"0\" value={search.minPrice} onChange={(changeMinPrice)}/>-\r\n                        <input id=\"max-price\" className=\"filter-form-input filter-form-number\" type=\"number\" size=\"2\" min=\"0\" value={search.maxPrice} onChange={changeMaxPrice}/>\r\n                    </div>\r\n                </div>\r\n                <input className=\"filter-form-submit\" type=\"submit\" value=\"Filter\" onClick={() => setFilterToggled(false)}/>\r\n                <div>\r\n                    <h4>Order by</h4>\r\n                    <label>Price:</label>\r\n                    <div>\r\n                        <input type=\"radio\" className=\"filter-form-radio\" name=\"price\" id=\"price1\" value=\"+\" onChange={e => setSearch({...search, orderBy: e.target.value})}/>\r\n                        <label htmlFor=\"price1\">Ascending</label>\r\n                        <input type=\"radio\" className=\"filter-form-radio\" name=\"price\" id=\"price2\" value=\"-\" onChange={e => setSearch({...search, orderBy: e.target.value})}/>\r\n                        <label htmlFor=\"price2\">Descending</label> \r\n                    </div>\r\n                </div>\r\n                <div className=\"not-displayed\">\r\n                    <div>\r\n                    <h3>Page: <input type=\"number\" className=\"filter-form-input filter-form-number\" value={page} onFocus={e => e.target.select()} onBlur={e => changePage(e.target.value)}/> of {maxPage}</h3>\r\n                    </div>\r\n                    <div>\r\n                        {page !== 1 && <span className=\"blue-button\" onClick={() => changePage(page-1)}>&lt;</span>}\r\n                        {page !== maxPage && <span className=\"blue-button\" onClick={() => changePage(page+1)}>&gt;</span>}\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n        <div className=\"filter-arrow\" onClick={() => setFilterToggled(!filterToggled)}>{filterToggled ? <FiChevronLeft /> : <FiChevronRight />}</div>\r\n        <div className=\"pages\">\r\n                <span className={`blue-button${page !== 1 ? \"\" : \" hidden\"}`} onClick={() => changePage(page-1)}>&lt;</span>\r\n                <h4><input type=\"number\" className=\"filter-form-input page-input\" value={page} onFocus={e => e.target.select()} onChange={e => changePage(e.target.value)}/> of {maxPage}</h4>\r\n                <span className={`blue-button${page !== maxPage ? \"\" : \" hidden\"}`} onClick={() => changePage(page+1)}>&gt;</span>\r\n        </div>\r\n        <AdminItemList items={items}/>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AdminFilterForm;","import apiInstance from '../../utils/api';\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport {useParams, useHistory, Link} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport './admin.css';\r\n\r\nconst AdminItemDetails = () => {\r\n\r\n    const [item, setItem] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        quantity: \"\",\r\n        price: 0,\r\n        images: []\r\n    });\r\n    const [selectedImage, setSelectedImage] = useState(\"https://i.stack.imgur.com/y9DpT.jpg\")\r\n    const {reloadUserData} = useContext(UserContext);\r\n    const [quantity, setQuantity] = useState(1);\r\n    const [response, setResponse] = useState(false);\r\n    const [error, setError] = useState({});\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const url = `shop/admin/items/${id}/`;\r\n        apiInstance.get(url, {withCredentials: true})\r\n        .then(response => {\r\n            setItem(response.data);\r\n            if (response.data.images.length > 0) {\r\n                setSelectedImage(response.data.images[0].url);\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 403) {\r\n                reloadUserData();\r\n            }\r\n            history.push(\"/not-found\");\r\n        });\r\n    }, []);\r\n\r\n    const changeQuantity = e => {\r\n        if (e.target.value > 0) {\r\n            setQuantity(Number.parseInt(e.target.value));\r\n        } else {\r\n            setQuantity(1);\r\n        }\r\n    };\r\n\r\n    const increaseQuantity = () => {\r\n        setQuantity(quantity+1);\r\n    };\r\n\r\n    const decreaseQuantity = () => {\r\n        if (quantity > 0) {\r\n            setQuantity(quantity-1);\r\n        }\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        reloadUserData();\r\n        const url = `shop/items/${id}/`;\r\n        apiInstance.post(url, {}, {withCredentials: true, params: {quantity}})\r\n        .then(response => {\r\n            setResponse(response.data);\r\n            setError({});\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 401) {\r\n                history.push(\"/login\");\r\n            }\r\n            setResponse({});\r\n            setError(error.response.data);\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"scrollable-page\">\r\n            <div className=\"item-details\">\r\n                <div className=\"item-details-images\">\r\n                    <img src={selectedImage} alt=\"item\" className=\"item-details-image\"/>\r\n                    <div className=\"item-details-small-images\">\r\n                        {item.images.length > 1 && item.images.map((image, index) => (\r\n                            <img src={image.url} alt=\"item-small\" key={index} className=\"item-details-small-image\"\r\n                            onClick={e => setSelectedImage(e.target.src)}/>\r\n                        ))}\r\n                    </div>\r\n                    <Link to={`/admin-edit-item-images/${id}`}><div className=\"blue-button\">Edit images</div></Link>\r\n                </div>\r\n                <div className=\"item-details-line not-displayed\"></div>\r\n                <div className=\"item-details-info\">\r\n                    <div className=\"item-details-name\">{item.name}</div>\r\n                    <div className=\"item-details-description\">{item.description}</div>\r\n                    <div className=\"item-details-bottom\">\r\n                        <div className=\"item-quantity\">In-stock: {item.quantity}</div>\r\n                        {item.is_discount && <span className=\"item-old-price\">{item.old_price}zl</span>}\r\n                        <span className={item.is_discount ? \"item-discount-price\" : \"item-price\"}>{item.price}zl</span>\r\n                        {item.is_discount && <h4 className=\"on-discount\">ON DISCOUNT!</h4>}\r\n                    </div>\r\n                    {item.is_available && item.quantity > 0 ? <form className=\"quantity-form\" onSubmit={handleSubmit}>\r\n                        <div className=\"quantity-data\">\r\n                            <div className=\"item-quantity\">Quantity: </div>\r\n                            <div className=\"quantity-buttons\">\r\n                                <div onClick={decreaseQuantity} className=\"sign-box\">-</div>\r\n                                <input type=\"number\" className=\"quantity-input\" value={quantity} onChange={changeQuantity}/>\r\n                                <div onClick={increaseQuantity} className=\"sign-box\">+</div>\r\n                            </div>\r\n                        </div>\r\n                        <input type=\"submit\" value=\"Add to cart\" className=\"add-to-cart\"/>\r\n                        {response.detail && <div className=\"quantity-success\">{response.detail}</div>}\r\n                        {error.detail && <div className=\"quantity-fail\">{error.detail}</div>}\r\n                    </form> : <div className=\"add-to-cart-unavailable\">Item unavailable</div>}\r\n                    <div className=\"container\">\r\n                            <Link to={`/admin-edit-item/${id}`}><div className=\"blue-button\">Edit item</div></Link>\r\n                            <Link to={`/admin-delete-item/${id}`}><div className=\"delete-button\">Delete item</div></Link>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminItemDetails;","\r\n\r\nconst ItemForm = ({item, setItem, errors, responseOk, handleSubmit}) => {\r\n    return (\r\n        <div className=\"scrollable-page\">\r\n            <div className=\"form-container\">\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <h1>Item form</h1>\r\n                    {responseOk && <div className=\"form-success\">Item saved</div>}\r\n                    <div className=\"form-field\">\r\n                        Name:\r\n                        <input type=\"text\" className=\"form-input\" placeholder=\"Name\" value={item.name} onChange={e => setItem({...item, name: e.target.value})}/>\r\n                        {errors.name && errors.name.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        Description:\r\n                        <input type=\"text\" className=\"form-input\" placeholder=\"Description\" value={item.description} onChange={e => setItem({...item, description: e.target.value})}/>\r\n                        {errors.description && errors.description.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        Quantity:\r\n                        <input type=\"number\" className=\"form-input\" placeholder=\"Quantity\" value={item.quantity} onChange={e => setItem({...item, quantity: e.target.value})}/>\r\n                        {errors.quantity && errors.quantity.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        Price:\r\n                        <input type=\"number\" step=\"0.01\" className=\"form-input\" placeholder=\"Price\" value={item.price} onChange={e => setItem({...item, price: e.target.value})}/>\r\n                        {errors.price && errors.price.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                    </div>\r\n                    <div className=\"form-field\">\r\n                        Old price (shown on discount):\r\n                        <input type=\"number\" step=\"0.01\" className=\"form-input\" placeholder=\"Old price (shown on discount)\" value={item.old_price} onChange={e => setItem({...item, old_price: e.target.value})}/>\r\n                        {errors.old_price && errors.old_price.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                    </div>\r\n                    <div className=\"checkbox-field\">\r\n                        <div>\r\n                            <input type=\"checkbox\" checked={item.is_discount} onChange={e => setItem({...item, is_discount: !item.is_discount})}/>\r\n                            <span> Is discount</span>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"checkbox\" checked={item.is_available} onChange={e => setItem({...item, is_available: !item.is_available})}/>\r\n                            <span> Is available</span>\r\n                        </div>\r\n                        <div>\r\n                            <input type=\"checkbox\" checked={item.is_visible} onChange={e => setItem({...item, is_visible: !item.is_visible})}/>\r\n                            <span> Is visible</span>\r\n                        </div>\r\n                    </div>\r\n                    <input type=\"submit\" className=\"form-button form-input\" value=\"Save\"/>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ItemForm;","import ItemForm from './ItemForm';\r\nimport {useState, useEffect, useContext} from 'react';\r\nimport UserContext from '../../context/UserContext';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport apiInstance from '../../utils/api';\r\nimport './admin.css';\r\n\r\nconst AdminEditItem = () => {\r\n    const { id } = useParams();\r\n    const [item, setItem] = useState({\r\n       name: \"\",\r\n       description: \"\",\r\n       price: 0,\r\n       quantity: 0,\r\n       is_discount: false,\r\n       old_price: 0,\r\n       is_visible: false,\r\n       is_available: false, \r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [responseOk, setResponseOk] = useState(false);\r\n    const {reloadUserData} = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        apiInstance.get(`shop/admin/items/${id}/`, {withCredentials: true})\r\n        .then(response => {\r\n            setItem(response.data);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 403) {\r\n                reloadUserData();\r\n                history.push(\"/not-found\");\r\n            } else if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            } else {\r\n                history.push(\"/not-found\");\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        console.log();\r\n        apiInstance.put(`shop/admin/items/${id}/`, item, {withCredentials: true})\r\n        .then(response => {\r\n            setResponseOk(true);\r\n            setErrors({});\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 403) {\r\n                reloadUserData();\r\n                history.push(\"/not-found\");\r\n            } else if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            } else {\r\n                setErrors(error.response.data);\r\n                setResponseOk(false);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <ItemForm item={item} setItem={setItem} errors={errors} responseOk={responseOk} handleSubmit={handleSubmit}/>\r\n    );\r\n};\r\n\r\nexport default AdminEditItem;","import {useState, useEffect, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport ItemForm from './ItemForm';\r\nimport apiInstance from '../../utils/api';\r\nimport './admin.css';\r\n\r\nconst AdminCreateItem = () => {\r\n    const [item, setItem] = useState({\r\n        name: \"\",\r\n        description: \"\",\r\n        price: 0,\r\n        quantity: 0,\r\n        is_discount: false,\r\n        old_price: 0,\r\n        is_visible: false,\r\n        is_available: false,\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const [responseOk, setResponseOk] = useState(false);\r\n    const history = useHistory();\r\n    const {reloadUserData} = useContext(UserContext);\r\n\r\n    useEffect(() => {\r\n        apiInstance.get(\"auth/user/\", {withCredentials: true})\r\n        .then(response => {\r\n            if (!response.data.is_staff) {\r\n                reloadUserData();\r\n                history.push(\"not-found\");\r\n            }\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        apiInstance.post(\"shop/admin/items/\", item, {withCredentials: true})\r\n        .then(response => {\r\n            const { id } = response.data;\r\n            setErrors({});\r\n            setResponseOk(true);\r\n            history.push(`/admin-item-details/${id}`);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 403) {\r\n                reloadUserData();\r\n                history.push(\"/not-found\");\r\n            } else if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            } else {\r\n                setResponseOk(false);\r\n                setErrors(error.response.data);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <ItemForm item={item} setItem={setItem} errors={errors} responseOk={responseOk} handleSubmit={handleSubmit}/>\r\n    );\r\n};\r\n\r\nexport default AdminCreateItem;","import {useState, useEffect, useContext} from 'react';\r\nimport {useHistory, useParams, Link} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport apiInstance from '../../utils/api';\r\nimport './admin.css';\r\n\r\nconst AdminDeleteItem = () => {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const { reloadUserData } = useContext(UserContext);\r\n    const [responseOk, setResponseOk] = useState(false);\r\n\r\n    useEffect(() => {\r\n        apiInstance.delete(`shop/admin/items/${id}/`, {withCredentials: true})\r\n        .then(response => {\r\n            setResponseOk(true);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 403) {\r\n                reloadUserData();\r\n                history.push(\"/not-found\");\r\n            } else if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            } else if (error.response.status === 404) {\r\n                history.push(\"/not-found\");\r\n            } else {\r\n                setResponseOk(false);\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"main-text\">\r\n            <div>\r\n                {responseOk ? <h2>Item deleted succesfully</h2>\r\n                : <h3>Cannot delete item (Item is linked to other models such as users' orders)</h3>}\r\n                <Link to=\"/admin-items\"><div className=\"blue-button\">Go back to items</div></Link>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminDeleteItem;","import {useState, useEffect, useContext, useRef} from 'react';\r\nimport {useParams, useHistory} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport apiInstance from '../../utils/api';\r\nimport './admin.css';\r\n\r\nconst AdminEditImages = () => {\r\n    const { id } = useParams();\r\n    const history = useHistory();\r\n    const {reloadUserData} = useContext(UserContext);\r\n    const [images, setImages] = useState([]);\r\n    const imagesInput = useRef();\r\n    const [responseOk, setResponseOk] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n\r\n    const getImages = id => {\r\n        apiInstance.get(`shop/admin/items/${id}/`, {withCredentials: true})\r\n        .then(response => {\r\n            setImages(response.data.images);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 403) {\r\n                reloadUserData();\r\n                history.push(\"/not-found\");\r\n            } else if (error.response.status === 401) { \r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            } else {\r\n                history.push(\"/not-found\");\r\n            }\r\n        });\r\n    };\r\n\r\n    useEffect(() => {\r\n        getImages(id);\r\n    }, []);\r\n\r\n    const saveImages = e => {\r\n        e.preventDefault();\r\n        const images = imagesInput.current.files;\r\n        if (images.length) {\r\n            const formData = new FormData();\r\n            [...images].forEach(image => formData.append(\"images\", image));\r\n            apiInstance.patch(`shop/admin/items/${id}/`, formData,\r\n            {withCredentials: true, headers: {\"content-type\": \"multipart/form-data\"}})\r\n            .then(response => {\r\n                setResponseOk(true);\r\n                setErrors({});\r\n                getImages(id);\r\n            })\r\n            .catch(error => {\r\n                if (error.response.status === 403) {\r\n                    reloadUserData();\r\n                    history.push(\"/not-found\");\r\n                } else if (error.response.status === 401) {\r\n                    reloadUserData();\r\n                    history.push(\"/login\");\r\n                } else {\r\n                    setErrors(error.response.data);\r\n                }\r\n            });\r\n        } else {\r\n            setResponseOk(false);\r\n            setErrors({detail: \"You must upload at least 1 image\"});\r\n        }\r\n    };\r\n\r\n    const setAsMain = imageId => {\r\n        apiInstance.put(`shop/admin/items/images/${imageId}/`, {}, {withCredentials: true})\r\n        .then(response => {\r\n            getImages(id);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 403) {\r\n                reloadUserData();\r\n                history.push(\"/not-found\");\r\n            } else if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            } else {\r\n                setErrors(error.response.data);\r\n            }\r\n        });\r\n    };\r\n\r\n    const deleteImage = imageId => {\r\n        apiInstance.delete(`shop/admin/items/images/${imageId}/`, {withCredentials: true})\r\n        .then(response => {\r\n            getImages(id);\r\n            setResponseOk(false);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 403) {\r\n                reloadUserData();\r\n                history.push(\"/not-found\");\r\n            } else if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            } else {\r\n                setErrors(error.response.data);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <div className=\"scrollable-page\">\r\n            <div className=\"gray-container\">\r\n                <h1>Edit images</h1>\r\n                <div className=\"images\">\r\n                    {images.map((image, index) => (\r\n                        <div className=\"image-ordering\" key={index}>\r\n                            <img src={image.url} alt=\"item\" key={index} className=\"edit-image\"/>\r\n                            <div>\r\n                                {!image.is_main && <div className=\"blue-button\" onClick={() => setAsMain(image.id)}>Set as main</div>}\r\n                                {image.is_main && <div className=\"main-image-info\">Main</div>}\r\n                                <div className=\"delete-button\" onClick={() => deleteImage(image.id)}>Delete</div>\r\n                            </div>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n                <div className=\"image-save\">\r\n                    {responseOk && <div className=\"form-success\">{imagesInput.current.files.length} images saved</div>}\r\n                    <div className=\"image-form\">\r\n                        Add images:\r\n                        <input type=\"file\" multiple ref={imagesInput}/>\r\n                        <div className=\"blue-button\" onClick={saveImages}>Save images</div>\r\n                        {errors.detail && <div className=\"form-error\">{errors.detail}</div>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminEditImages;","\r\nconst ShippingMethodForm = ({shipping, setShipping, errors, responseOk, handleSubmit}) => {\r\n\r\n    return (\r\n        <div className=\"form-container\">\r\n            <form className=\"small-form\" onSubmit={handleSubmit}>\r\n                <h1>Shipping method</h1>\r\n                {responseOk && <div className=\"form-success\">Shipping method saved</div>}   \r\n                <div className=\"form-field\">\r\n                    Name: \r\n                    <input type=\"text\" className=\"form-input\" placeholder=\"Name\" value={shipping.name} onChange={e => setShipping({...shipping, name: e.target.value})}/>\r\n                    {errors.name && errors.name.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                </div>\r\n                <div className=\"form-field\">\r\n                    Price: \r\n                    <input type=\"number\" className=\"form-input\" step=\"0.01\" placeholder=\"Price\" value={shipping.price} onChange={e => setShipping({...shipping, price: e.target.value})}/>\r\n                    {errors.price && errors.price.map((message, index) => <div className=\"form-error\" key={index}>{message}</div>)}\r\n                </div>\r\n                <div>\r\n                    <input type=\"checkbox\" checked={shipping.is_available} onChange={() => setShipping({...shipping, is_available: !shipping.is_available})}/>\r\n                    <span> Is available</span>\r\n                </div>\r\n                <input type=\"submit\" className=\"form-button form-input\"/>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ShippingMethodForm;","import ShippingMethodForm from './ShippingMethodForm';\r\nimport {useState, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport apiInstance from '../../utils/api';\r\nimport './admin.css';\r\n\r\nconst AdminCreateShipping = () => {\r\n\r\n    const [shipping, setShipping] = useState({\r\n       name: \"\",\r\n       price: 0,\r\n       is_available: false \r\n    });\r\n    const [responseOk, setResponseOk] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const history = useHistory();\r\n    const {reloadUserData} = useContext(UserContext);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        apiInstance.post(\"shop/admin/shipping-method/\", shipping, {withCredentials: true})\r\n        .then(response => {\r\n            setErrors({});\r\n            setResponseOk(true);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 403) {\r\n                reloadUserData();\r\n                history.push(\"/not-found\");\r\n            } else if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            } else {\r\n                setResponseOk(false);\r\n                setErrors(error.response.data);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <ShippingMethodForm\r\n        shipping={shipping}\r\n        setShipping={setShipping}\r\n        errors={errors}\r\n        responseOk={responseOk}\r\n        handleSubmit={handleSubmit} />\r\n    );\r\n};\r\n\r\nexport default AdminCreateShipping;","import {useState, useEffect, useContext} from 'react';\r\nimport {useHistory, Link} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport apiInstance from '../../utils/api';\r\nimport './admin.css';\r\n\r\nconst AdminShippingList = () => {\r\n\r\n    const [shippings, setShippings] = useState([]);\r\n    const {reloadUserData} = useContext(UserContext);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        apiInstance.get(\"shop/admin/shipping-method\", {withCredentials: true})\r\n        .then(response => {\r\n            setShippings(response.data);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 403) {\r\n                reloadUserData();\r\n                history.push(\"/not-found\");\r\n            } else if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    return (\r\n        <div className=\"scrollable-page\">\r\n            <div className=\"gray-container\">\r\n                {shippings.length ? <h1>Shipping methods</h1> : <h1>No shipping methods</h1>}\r\n            </div>\r\n            {shippings.map((shipping, index) => (\r\n                <Link to={`/admin-edit-shipping/${shipping.id}/`} className=\"gray-container data-link\">\r\n                <div key={index}>\r\n                    <div className=\"data-container\">\r\n                        <div className=\"data-row\"><span>Name: </span><span>{shipping.name}</span></div>\r\n                        <div className=\"data-row\"><span>Price: </span><span>{shipping.price}zł</span></div>\r\n                        <div className=\"data-row\"><span>Is available: </span><span>{shipping.is_available ? \"Yes\": \"No\"}</span></div>\r\n                    </div>\r\n                </div>\r\n                </Link>\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminShippingList;","import ShippingMethodForm from './ShippingMethodForm';\r\nimport {useState, useContext, useEffect} from 'react';\r\nimport {useHistory, useParams} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport apiInstance from '../../utils/api';\r\nimport './admin.css';\r\n\r\n\r\nconst AdminCreateShipping = () => {\r\n\r\n    const [shipping, setShipping] = useState({\r\n       name: \"\",\r\n       price: 0,\r\n       is_available: false \r\n    });\r\n    const [responseOk, setResponseOk] = useState(false);\r\n    const [errors, setErrors] = useState({});\r\n    const history = useHistory();\r\n    const {reloadUserData} = useContext(UserContext);\r\n    const { id } = useParams();\r\n\r\n    useEffect(() => {\r\n        apiInstance.get(`shop/admin/shipping-method/${id}/`, {withCredentials: true})\r\n        .then(response => {\r\n            setShipping(response.data);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 403) {\r\n                reloadUserData();\r\n                history.push(\"/not-found\");\r\n            } else if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            } else {\r\n                history.push(\"/not-found\");\r\n            }\r\n        });\r\n    }, []);\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        apiInstance.put(`shop/admin/shipping-method/${id}/`, shipping, {withCredentials: true})\r\n        .then(response => {\r\n            setErrors({});\r\n            setResponseOk(true);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 403) {\r\n                reloadUserData();\r\n                history.push(\"/not-found\");\r\n            } else if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            } else {\r\n                setResponseOk(false);\r\n                setErrors(error.response.data);\r\n            }\r\n        });\r\n    };\r\n\r\n    return (\r\n        <ShippingMethodForm\r\n        shipping={shipping}\r\n        setShipping={setShipping}\r\n        errors={errors}\r\n        responseOk={responseOk}\r\n        handleSubmit={handleSubmit} />\r\n    );\r\n};\r\n\r\nexport default AdminCreateShipping;","import {useState, useEffect, useContext} from 'react';\r\nimport {useHistory} from 'react-router-dom';\r\nimport UserContext from '../../context/UserContext';\r\nimport apiInstance from '../../utils/api';\r\n\r\nconst AdminNotifications = () => {\r\n\r\n    const [notifications, setNotifications] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [maxPage, setMaxPage] = useState(1);\r\n    const history = useHistory();\r\n    const {reloadUserData} = useContext(UserContext);\r\n\r\n    const getNotifications = () => {\r\n        apiInstance.get(`shop/admin/notifications/?limit=10&offset=${(page-1)*10}`, {withCredentials: true})\r\n        .then(response => {\r\n            setNotifications(response.data.results);\r\n            setMaxPage(Math.floor((response.data.count-1) / 10) + 1);\r\n        })\r\n        .catch(error => {\r\n            if (error.response.status === 403) {\r\n                reloadUserData();\r\n                history.push(\"/not-found\");\r\n            } else if (error.response.status === 401) {\r\n                reloadUserData();\r\n                history.push(\"/login\");\r\n            }\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        getNotifications();\r\n    }, [page]);\r\n\r\n    const changePage = number => {\r\n        if (number > 0 && number <= maxPage) {\r\n            setPage(Number.parseInt(number));\r\n        } else {\r\n            setPage(1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"scrollable-page\">\r\n            <div className=\"gray-container\">\r\n                {notifications.length > 0 && <><h1>Notifications</h1>\r\n                <h3>Page: <input type=\"number\" className=\"filter-form-input page-input white\" value={page} onChange={e => changePage(e.target.value)}/> of {maxPage}</h3>\r\n                <div className=\"page-buttons\">\r\n                    {page !== 1 && <span className=\"blue-button\" onClick={() => changePage(page-1)}>&lt;</span>}\r\n                    {page !== maxPage && <span className=\"blue-button\" onClick={() => changePage(page+1)}>&gt;</span>}\r\n                </div>\r\n                </>}\r\n                {notifications.map((notification, index) => <div className=\"gray-container\" key={index}>{notification.content}</div>)}\r\n                {!notifications.length > 0 && <h1>No notifications</h1>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AdminNotifications;","import Header from './components/Header';\r\nimport FilterForm from './components/items/FilterForm';\r\nimport NotFound from './components/NotFound';\r\nimport Register from './components/user/Register';\r\nimport Login from './components/user/Login';\r\nimport Logout from './components/user/Logout';\r\nimport ConfirmEmail from './components/user/ConfirmEmail';\r\nimport UserProfile from './components/user/UserProfile'\r\nimport ChangePassword from './components/user/ChangePassword';\r\nimport UserContext from './context/UserContext';\r\nimport ItemDetails from './components/items/ItemDetails';\r\nimport ActiveOrder from './components/order/ActiveOrder';\r\nimport Checkout from './components/order/Checkout';\r\nimport History from './components/order/History';\r\nimport PasswordReset from './components/user/PasswordReset';\r\nimport {useState, useEffect} from 'react';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport apiInstance from './utils/api';\r\nimport PasswordResetConfirm from './components/user/PasswordResetConfirm';\r\nimport AdminPanel from './components/admin/AdminPanel';\r\nimport AdminFilterForm from './components/admin/AdminFilterForm';\r\nimport AdminItemDetails from './components/admin/AdminItemDetails';\r\nimport AdminEditItem from './components/admin/AdminEditItem';\r\nimport AdminCreateItem from './components/admin/AdminCreateItem';\r\nimport AdminDeleteItem from './components/admin/AdminDeleteItem';\r\nimport AdminEditImages from './components/admin/AdminEditImages';\r\nimport AdminCreateShipping from './components/admin/AdminCreateShipping';\r\nimport AdminShippingList from './components/admin/AdminShippingList';\r\nimport AdminEditShipping from './components/admin/AdminEditShipping';\r\nimport AdminNotifications from './components/admin/AdminNotifications';\r\n\r\nconst App = () => {\r\n\r\n  const [userData, setUserData] = useState({});\r\n\r\n  const reloadUserData = async () => {\r\n    await apiInstance.get('auth/user/', {withCredentials: true})\r\n    .then(response => {\r\n      setUserData(response.data);\r\n    })\r\n    .catch(error => {\r\n      setUserData({});\r\n    });\r\n  }; \r\n\r\n  useEffect(() => {\r\n    reloadUserData();\r\n  }, []);\r\n\r\n  return (\r\n    <Router>\r\n      <UserContext.Provider value={{userData, reloadUserData}}>\r\n        <div className=\"nav-wrapper\">\r\n          <Header />\r\n        </div>\r\n        <div className=\"page\">\r\n        <Switch>\r\n            <Route path=\"/\" component={FilterForm} exact/>\r\n            <Route path=\"/item-details/:id\" component={ItemDetails} exact />\r\n            <Route path=\"/order\" component={ActiveOrder} exact />\r\n            <Route path=\"/order-history\" component={History} exact />\r\n            <Route path=\"/checkout\" component={Checkout} exact />\r\n            <Route path=\"/verify-email/:key\" component={ConfirmEmail} exact/>\r\n            <Route path=\"/register\" component={Register} exact/>\r\n            <Route path=\"/login\" component={Login} exact/>\r\n            <Route path=\"/logout\" component={Logout} exact/>\r\n            <Route path=\"/profile\" component={UserProfile} exact />\r\n            <Route path=\"/change-password\" component={ChangePassword} exact />\r\n            <Route path=\"/reset-password\" component={PasswordReset} exact />\r\n            <Route path=\"/reset/:uid/:token/\" component={PasswordResetConfirm} exact />\r\n            <Route path=\"/admin-panel\" component={AdminPanel} exact />\r\n            <Route path=\"/admin-items\" component={AdminFilterForm} exact />\r\n            <Route path=\"/admin-item-details/:id\" component={AdminItemDetails} exact />\r\n            <Route path=\"/admin-item-create\" component={AdminCreateItem} exact />\r\n            <Route path=\"/admin-edit-item/:id\" component={AdminEditItem} exact />\r\n            <Route path=\"/admin-edit-item-images/:id\" component={AdminEditImages} exact />\r\n            <Route path=\"/admin-delete-item/:id\" component={AdminDeleteItem} exact />\r\n            <Route path=\"/admin-create-shipping\" component={AdminCreateShipping} exact />\r\n            <Route path=\"/admin-edit-shipping/:id\" component={AdminEditShipping} exact />\r\n            <Route path=\"/admin-shippings\" component={AdminShippingList} exact />\r\n            <Route path=\"/admin-notification-list\" component={AdminNotifications} exact />\r\n            <Route path=\"*\" component={NotFound}/>\r\n        </Switch>\r\n        </div>\r\n      </UserContext.Provider>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport \"./index.css\";\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}